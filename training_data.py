TRAINING_DATA = [
    ("Find all users who are over 30 years old and live in New York", 
     'db.users.find({"age": {"$gt": 30}, "city": "New York"})'),
    ("Get the total number of orders for each product", 
     'db.orders.aggregate([{"$group": {"_id": "$product_id", "total_orders": {"$sum": 1}}}])'),
    ("Find all restaurants that serve Italian cuisine and have a rating above 4", 
     'db.restaurants.find({"cuisine": "Italian", "rating": {"$gt": 4}})'),
    ("Count the number of employees in each department", 
     'db.employees.aggregate([{"$group": {"_id": "$department", "count": {"$sum": 1}}}])'),
    ("Find the top 5 most expensive products", 
     'db.products.find().sort({"price": -1}).limit(5)'),
    ("Get all orders placed in the last 7 days",
     'db.orders.find({"order_date": {"$gte": new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)}})'),
    ("Find users who have made more than 5 purchases",
     'db.users.find({"purchase_count": {"$gt": 5}})'),
    ("Get the average age of users in each city",
     'db.users.aggregate([{"$group": {"_id": "$city", "avg_age": {"$avg": "$age"}}}])'),
    ("Find products with less than 10 items in stock",
     'db.products.find({"stock_count": {"$lt": 10}})'),
    ("Get the total revenue for each product category",
     'db.orders.aggregate([{"$group": {"_id": "$product_category", "total_revenue": {"$sum": "$total_amount"}}}])'),
    ("Find all users who registered in the last 30 days",
     'db.users.find({"registration_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}})'),
    ("Get the top 3 customers by total purchase amount",
     'db.orders.aggregate([{"$group": {"_id": "$customer_id", "total_spent": {"$sum": "$amount"}}}, {"$sort": {"total_spent": -1}}, {"$limit": 3}])'),
    ("Find all products that are either in category 'Electronics' or priced above $1000",
     'db.products.find({"$or": [{"category": "Electronics"}, {"price": {"$gt": 1000}}]})'),
    ("Get the number of orders placed on each day of the week",
     'db.orders.aggregate([{"$group": {"_id": {"$dayOfWeek": "$order_date"}, "count": {"$sum": 1}}}])'),
    ("Find all users who have a Gmail email address",
     'db.users.find({"email": /.*@gmail\.com$/})'),
    ("Get the average rating for each restaurant category",
     'db.restaurants.aggregate([{"$group": {"_id": "$category", "avg_rating": {"$avg": "$rating"}}}])'),
    ("Find all products that have been ordered more than 100 times",
     'db.orders.aggregate([{"$group": {"_id": "$product_id", "order_count": {"$sum": 1}}}, {"$match": {"order_count": {"$gt": 100}}}])'),
    ("Get the total number of users for each subscription tier",
     'db.users.aggregate([{"$group": {"_id": "$subscription_tier", "user_count": {"$sum": 1}}}])'),
    ("Find all orders with a total amount between $100 and $500",
     'db.orders.find({"total_amount": {"$gte": 100, "$lte": 500}})'),
    ("Get the top 5 most common tags across all blog posts",
     'db.blog_posts.aggregate([{"$unwind": "$tags"}, {"$group": {"_id": "$tags", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 5}])'),
    ("Find all users who have not placed an order in the last 90 days",
     'db.users.find({"last_order_date": {"$lt": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}})'),
    ("Get the total revenue for each month of the current year",
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().getFullYear(), 0, 1)}}}, {"$group": {"_id": {"$month": "$order_date"}, "total_revenue": {"$sum": "$total_amount"}}}])'),
    ("Find all products that have 'organic' in their name and are priced below $50",
     'db.products.find({"name": /organic/i, "price": {"$lt": 50}})'),
    ("Get the average order value for each customer",
     'db.orders.aggregate([{"$group": {"_id": "$customer_id", "avg_order_value": {"$avg": "$total_amount"}}}])'),
    ("Find all restaurants within 5 miles of a given location",
     'db.restaurants.find({"location": {"$nearSphere": {"$geometry": {"type": "Point", "coordinates": [-73.93414657, 40.82302903]}, "$maxDistance": 8046.72}}})'),
    ("Get the total number of page views for each blog post",
     'db.page_views.aggregate([{"$group": {"_id": "$blog_post_id", "total_views": {"$sum": 1}}}])'),
    ("Find all users who have completed their profile",
     'db.users.find({"profile_completed": true})'),
    ("Get the most recent order for each user",
     'db.orders.aggregate([{"$sort": {"order_date": -1}}, {"$group": {"_id": "$user_id", "last_order": {"$first": "$$ROOT"}}}])'),
    ("Find all products that are on sale (have a discount percentage greater than 0)",
     'db.products.find({"discount_percentage": {"$gt": 0}})'),
    ("Get the total number of active subscriptions for each plan",
     'db.subscriptions.aggregate([{"$match": {"status": "active"}}, {"$group": {"_id": "$plan", "active_count": {"$sum": 1}}}])'),
    ("Find all orders that contain a specific product",
     'db.orders.find({"items.product_id": "ABC123"})'),
    ("Get the average processing time for orders in each status",
     'db.orders.aggregate([{"$group": {"_id": "$status", "avg_processing_time": {"$avg": {"$subtract": ["$completed_date", "$order_date"]}}}}])'),
    ("Find all users who have referred at least 3 other users",
     'db.users.find({"referral_count": {"$gte": 3}})'),
    ("Get the total revenue for each sales representative",
     'db.orders.aggregate([{"$group": {"_id": "$sales_rep_id", "total_revenue": {"$sum": "$total_amount"}}}])'),
    ("Find all products that have not been ordered in the last 30 days",
     'db.products.find({"_id": {"$nin": db.orders.distinct("product_id", {"order_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}})}}})'),
    ("Get the top 10 customers by number of orders placed",
     'db.orders.aggregate([{"$group": {"_id": "$customer_id", "order_count": {"$sum": 1}}}, {"$sort": {"order_count": -1}}, {"$limit": 10}])'),
    ("Find all blog posts with more than 100 comments",
     'db.blog_posts.find({"comment_count": {"$gt": 100}})'),
    ("Get the average rating for each product",
     'db.reviews.aggregate([{"$group": {"_id": "$product_id", "avg_rating": {"$avg": "$rating"}}}])'),
    ("Find all users who have not verified their email address",
     'db.users.find({"email_verified": false})'),
    ("Get the total number of items sold for each category",
     'db.order_items.aggregate([{"$group": {"_id": "$category", "total_sold": {"$sum": "$quantity"}}}])'),
    ("Find all orders with more than 5 items",
     'db.orders.find({"$expr": {"$gt": [{"$size": "$items"}, 5]}})'),
    ("Get the average time between orders for each customer",
     'db.orders.aggregate([{"$sort": {"customer_id": 1, "order_date": 1}}, {"$group": {"_id": "$customer_id", "avg_time_between_orders": {"$avg": {"$subtract": ["$order_date", "$last_order_date"]}}}}])'),
    ("Find all products that are both in stock and on sale",
     'db.products.find({"in_stock": true, "on_sale": true})'),
    ("Get the total revenue for each product, sorted from highest to lowest",
     'db.order_items.aggregate([{"$group": {"_id": "$product_id", "total_revenue": {"$sum": {"$multiply": ["$price", "$quantity"]}}}}, {"$sort": {"total_revenue": -1}}])'),
    ("Find all users who have logged in within the last 24 hours",
     'db.users.find({"last_login": {"$gte": new Date(Date.now() - 24 * 60 * 60 * 1000)}})'),
    ("Get the number of active users for each country",
     'db.users.aggregate([{"$match": {"status": "active"}}, {"$group": {"_id": "$country", "active_users": {"$sum": 1}}}])'),
    ("Find all orders that were delivered late",
     'db.orders.find({"actual_delivery_date": {"$gt": "$expected_delivery_date"}})'),
    ("Get the top 5 most viewed products in each category",
     'db.product_views.aggregate([{"$group": {"_id": {"category": "$category", "product_id": "$product_id"}, "views": {"$sum": 1}}}, {"$sort": {"views": -1}}, {"$group": {"_id": "$_id.category", "top_products": {"$push": {"product_id": "$_id.product_id", "views": "$views"}}}}, {"$project": {"top_products": {"$slice": ["$top_products", 5]}}}])'),
    ("Find all users who have made a purchase in every month of the current year",
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().getFullYear(), 0, 1)}}}, {"$group": {"_id": {"user_id": "$user_id", "month": {"$month": "$order_date"}}}, {"$group": {"_id": "$_id.user_id", "months": {"$sum": 1}}}, {"$match": {"months": 12}}})'),
    ("Get the average order processing time for each day of the week",
     'db.orders.aggregate([{"$project": {"day_of_week": {"$dayOfWeek": "$order_date"}, "processing_time": {"$subtract": ["$shipped_date", "$order_date"]}}}, {"$group": {"_id": "$day_of_week", "avg_processing_time": {"$avg": "$processing_time"}}}])'),
    ("Find all products that have been reviewed by users from at least 5 different countries",
     'db.reviews.aggregate([{"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}}}, {"$group": {"_id": "$_id.product_id", "country_count": {"$sum": 1}}}, {"$match": {"country_count": {"$gte": 5}}}])'),
    ("Get the total revenue and number of orders for each customer segment",
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "total_revenue": {"$sum": "$total_amount"}, "order_count": {"$sum": 1}}}])'),
    ("Find all blog posts that mention a specific keyword in either the title or content",
     'db.blog_posts.find({"$or": [{"title": /keyword/i}, {"content": /keyword/i}]})'),
    ("Get the average rating for each product attribute across all reviews",
     'db.reviews.aggregate([{"$unwind": "$attribute_ratings"}, {"$group": {"_id": "$attribute_ratings.name", "avg_rating": {"$avg": "$attribute_ratings.rating"}}}])'),
    ("Find all users who have abandoned their shopping cart",
     'db.users.find({"cart.items": {"$ne": []}, "cart.last_updated": {"$lt": new Date(Date.now() - 24 * 60 * 60 * 1000)}})'),
    ("Get the total number of products and average price for each brand",
     'db.products.aggregate([{"$group": {"_id": "$brand", "product_count": {"$sum": 1}, "avg_price": {"$avg": "$price"}}}])'),
    ("Find all orders that were paid using a specific payment method",
     'db.orders.find({"payment_method": "PayPal"})'),
    ("Get the most common words used in product reviews",
     'db.reviews.aggregate([{"$project": {"words": {"$split": ["$text", " "]}}}, {"$unwind": "$words"}, {"$group": {"_id": "$words", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 10}])'),
    ("Find all users who have subscribed to a newsletter",
     'db.users.find({"newsletter_subscribed": true})'),
    ("Get the total revenue for each product category in the last quarter",
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().setMonth(new Date().getMonth() - 3))}}}, {"$unwind": "$items"}, {"$group": {"_id": "$items.category", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),
    ("Find all products that have been restocked in the last 7 days",
     'db.inventory_logs.find({"action": "restock", "date": {"$gte": new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)}})'),
    ("Get the average time spent on each page of the website",
     'db.page_views.aggregate([{"$group": {"_id": "$page_url", "avg_time_spent": {"$avg": "$time_spent"}}}])'),
    ("Find all users who have made a purchase after clicking on a specific ad campaign",
     'db.users.find({"conversion_source.campaign_id": "ABC123", "has_purchased": true})'),
    ("Get the total number of support tickets opened and resolved for each product",
     'db.support_tickets.aggregate([{"$group": {"_id": "$product_id", "opened": {"$sum": 1}, "resolved": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, 1, 0]}}}}])'),
    ("Find all products that have been viewed but never purchased",
     'db.products.find({"_id": {"$in": db.product_views.distinct("product_id"), "$nin": db.orders.distinct("items.product_id")}})'),
    ("Get the average sentiment score for reviews of each product",
     'db.reviews.aggregate([{"$group": {"_id": "$product_id", "avg_sentiment": {"$avg": "$sentiment_score"}}}])'),
    ("Find all users who have referred at least one other user who has made a purchase",
     'db.users.find({"_id": {"$in": db.users.distinct("referred_by", {"has_purchased": true})}})'),
    ("Get the total revenue from each marketing channel",
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.acquisition_channel", "total_revenue": {"$sum": "$total_amount"}}}])'),
    ("Find all products that have conflicting inventory counts",
     'db.products.find({"$expr": {"$ne": ["$inventory_count", {"$sum": "$warehouse_inventory.quantity"}]}})'),
    ("Get the average order value for each hour of the day",
     'db.orders.aggregate([{"$group": {"_id": {"$hour": "$order_date"}, "avg_order_value": {"$avg": "$total_amount"}}}])'),
    ("Find all users who have written reviews for products they haven't purchased",
     'db.reviews.find({"user_id": {"$nin": db.orders.distinct("user_id", {"items.product_id": "$product_id"})}})'),
    ("Get the top 5 products with the highest profit margin",
     'db.products.aggregate([{"$project": {"name": 1, "profit_margin": {"$divide": [{"$subtract": ["$price", "$cost"]}, "$price"]}}}, {"$sort": {"profit_margin": -1}}, {"$limit": 5}])'),
    ("Find all orders that were shipped to a different address than the user's default address",
     'db.orders.find({"shipping_address": {"$ne": "$user.default_address"}})'),
    ("Get the average time between user registration and first purchase",
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"time_to_purchase": {"$subtract": [{"$min": "$orders.order_date"}, "$registration_date"]}}}, {"$group": {"_id": null, "avg_time": {"$avg": "$time_to_purchase"}}}])'),
    ("Find all products that have been returned more than 10% of the time",
     'db.products.find({"$expr": {"$gt": [{"$divide": ["$return_count", "$order_count"]}, 0.1]}})'),
    ("Get the total revenue for each product, broken down by customer segment",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"product_id": "$items.product_id", "segment": "$user.segment"}, "revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),
    ("Find all users who have viewed a product multiple times but haven't purchased it",
     'db.product_views.aggregate([{"$group": {"_id": {"user_id": "$user_id", "product_id": "$product_id"}, "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gt": 1}}}, {"$lookup": {"from": "orders", "localField": "_id.user_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$not": {"$elemMatch": {"items.product_id": "$_id.product_id"}}}}}])'),
    ("Get the average customer lifetime value for each acquisition channel",
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$project": {"acquisition_channel": 1, "total_spent": {"$sum": "$orders.total_amount"}}}, {"$group": {"_id": "$acquisition_channel", "avg_lifetime_value": {"$avg": "$total_spent"}}}])'),
    ("Find all products that have been consistently top sellers for the past 6 months",
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 6 * 30 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$group": {"_id": {"product_id": "$items.product_id", "month": {"$month": "$order_date"}}, "total_sold": {"$sum": "$items.quantity"}}}, {"$group": {"_id": "$_id.product_id", "months_as_top_seller": {"$sum": 1}}}, {"$match": {"months_as_top_seller": 6}}])'),
    ("Get the average response time for customer support tickets, grouped by priority level",
     'db.support_tickets.aggregate([{"$match": {"status": "resolved"}}, {"$project": {"priority": 1, "response_time": {"$subtract": ["$first_response_date", "$created_date"]}}}, {"$group": {"_id": "$priority", "avg_response_time": {"$avg": "$response_time"}}}])'),
    ("Find all users who have made purchases in at least 3 different product categories",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": {"user_id": "$user_id", "category": "$items.category"}}}, {"$group": {"_id": "$_id.user_id", "category_count": {"$sum": 1}}}, {"$match": {"category_count": {"$gte": 3}}}])'),
    ("Get the total revenue and number of orders for each country, sorted by revenue",
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.country", "total_revenue": {"$sum": "$total_amount"}, "order_count": {"$sum": 1}}}, {"$sort": {"total_revenue": -1}}])'),
    ("Find all products that have a higher return rate when purchased online vs in-store",
     'db.returns.aggregate([{"$group": {"_id": {"product_id": "$product_id", "purchase_channel": "$purchase_channel"}, "return_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "online_return_rate": {"$max": {"$cond": [{"$eq": ["$_id.purchase_channel", "online"]}, {"$divide": ["$return_count", "$total_sold"]}, 0]}}, "in_store_return_rate": {"$max": {"$cond": [{"$eq": ["$_id.purchase_channel", "in_store"]}, {"$divide": ["$return_count", "$total_sold"]}, 0]}}}}, {"$match": {"$expr": {"$gt": ["$online_return_rate", "$in_store_return_rate"]}}}])'),
    ("Get the average time between order placement and shipping for each shipping method",
     'db.orders.aggregate([{"$match": {"status": "shipped"}}, {"$project": {"shipping_method": 1, "processing_time": {"$subtract": ["$shipped_date", "$order_date"]}}}, {"$group": {"_id": "$shipping_method", "avg_processing_time": {"$avg": "$processing_time"}}}])'),
    ("Find all users who have left a review for every product they've purchased",
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "user_id", "as": "reviews"}}, {"$project": {"_id": 1, "purchased_products": {"$setUnion": "$orders.items.product_id"}, "reviewed_products": "$reviews.product_id"}}, {"$match": {"$expr": {"$setEquals": ["$purchased_products", "$reviewed_products"]}}}])'),
    ("Get the total revenue for each product attribute (e.g., color, size) combination",
     'db.order_items.aggregate([{"$unwind": "$attributes"}, {"$group": {"_id": {"product_id": "$product_id", "attribute": "$attributes.name", "value": "$attributes.value"}, "total_revenue": {"$sum": {"$multiply": ["$price", "$quantity"]}}}}])'),
    ("Find all users who have abandoned their shopping cart with a total value over $100",
     'db.users.aggregate([{"$match": {"cart.items": {"$ne": []}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 100}}}])'),
    ("Get the most common product combinations in orders",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$_id", "products": {"$push": "$items.product_id"}}}, {"$unwind": "$products"}, {"$unwind": "$products"}, {"$group": {"_id": {"p1": {"$min": ["$products", "$$ROOT.products"]}, "p2": {"$max": ["$products", "$$ROOT.products"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$sort": {"count": -1}}, {"$limit": 10}])'),
    ("Find all products that have been consistently rated above average",
     'db.reviews.aggregate([{"$group": {"_id": "$product_id", "avg_rating": {"$avg": "$rating"}}}, {"$group": {"_id": null, "overall_avg": {"$avg": "$avg_rating"}}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "product_id", "as": "product_reviews"}}, {"$match": {"$expr": {"$gt": [{"$avg": "$product_reviews.rating"}, "$overall_avg"]}}}])'),
    ("Get the total revenue for each sales representative, broken down by product category",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": {"sales_rep": "$sales_rep_id", "category": "$items.category"}, "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),
    ("Find all users who have referred at least 5 other users who have made a purchase",
     'db.users.aggregate([{"$lookup": {"from": "users", "localField": "_id", "foreignField": "referred_by", "as": "referrals"}}, {"$project": {"_id": 1, "purchasing_referrals": {"$size": {"$filter": {"input": "$referrals", "as": "referral", "cond": {"$eq": ["$$referral.has_purchased", true]}}}}}}, {"$match": {"purchasing_referrals": {"$gte": 5}}}])'),
    ("Get the average sentiment score for product reviews, grouped by user's age range",
     'db.reviews.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"$switch": {"branches": [{"case": {"$lt": ["$user.age", 18]}, "then": "Under 18"}, {"case": {"$lt": ["$user.age", 30]}, "then": "18-29"}, {"case": {"$lt": ["$user.age", 50]}, "then": "30-49"}, {"case": {"$lt": ["$user.age", 65]}, "then": "50-64"}], "default": "65 and over"}}, "avg_sentiment": {"$avg": "$sentiment_score"}}}])'),
    ("Find all products that have had a significant increase in views but no corresponding increase in sales",
     'db.product_views.aggregate([{"$group": {"_id": {"product_id": "$product_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$view_date"}}}, "view_count": {"$sum": 1}}}, {"$sort": {"_id.date": 1}}, {"$group": {"_id": "$_id.product_id", "view_trend": {"$push": {"date": "$_id.date", "views": "$view_count"}}}}, {"$project": {"view_increase": {"$gt": [{"$subtract": [{"$arrayElemAt": ["$view_trend.views", -1]}, {"$arrayElemAt": ["$view_trend.views", 0]}]}, 100]}}}, {"$match": {"view_increase": true}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "items.product_id", "as": "orders"}}, {"$match": {"$expr": {"$not": {"$gt": [{"$size": "$orders"}, 10]}}}}])'),
    ("Get the average customer satisfaction score for each support agent, considering only resolved tickets",
     'db.support_tickets.aggregate([{"$match": {"status": "resolved"}}, {"$group": {"_id": "$agent_id", "avg_satisfaction": {"$avg": "$satisfaction_score"}}}])'),
    ("Find all users who have made purchases on consecutive days",
     'db.orders.aggregate([{"$group": {"_id": {"user_id": "$user_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$order_date"}}}}}, {"$sort": {"_id.user_id": 1, "_id.date": 1}}, {"$group": {"_id": "$_id.user_id", "dates": {"$push": "$_id.date"}}}, {"$project": {"consecutive_days": {"$reduce": {"input": {"$range": [1, {"$size": "$dates"}]}, "initialValue": false, "in": {"$or": ["$$value", {"$eq": [{"$subtract": [{"$toDate": {"$arrayElemAt": ["$dates", "$$this"]}}, {"$toDate": {"$arrayElemAt": ["$dates", {"$subtract": ["$$this", 1]}]}}]}, 86400000]}]}}}}}, {"$match": {"consecutive_days": true}}])'),
    ("Get the total revenue from cross-sell and up-sell items for each product",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$match": {"items.is_cross_sell": true}}, {"$group": {"_id": "$items.original_product_id", "cross_sell_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}, {"$lookup": {"from": "products", "localField": "_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"_id": 1, "cross_sell_revenue": 1, "product_name": "$product.name"}}])'),
    ("Find all products that have been frequently bought together in the same order",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"product1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "product2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.product1": {"$ne": "$_id.product2"}}}, {"$sort": {"count": -1}}, {"$limit": 10}])'),
    ("Get the average time spent on the checkout page for completed vs abandoned carts",
     'db.page_views.aggregate([{"$match": {"page": "checkout"}}, {"$lookup": {"from": "orders", "localField": "session_id", "foreignField": "session_id", "as": "order"}}, {"$project": {"time_spent": 1, "completed": {"$cond": [{"$gt": [{"$size": "$order"}, 0]}, true, false]}}}, {"$group": {"_id": "$completed", "avg_time": {"$avg": "$time_spent"}}}])'),
    ("Find all users who have viewed a product page at least 5 times without making a purchase",
     'db.product_views.aggregate([{"$group": {"_id": {"user_id": "$user_id", "product_id": "$product_id"}, "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 5}}}, {"$lookup": {"from": "orders", "localField": "_id.user_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$not": {"$elemMatch": {"items.product_id": "$_id.product_id"}}}}}])'),
    ("Get the total revenue and profit for each product, considering both direct sales and returns",
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$items.product_id", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "total_cost": {"$sum": {"$multiply": ["$items.cost", "$items.quantity"]}}}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "product_id", "as": "returns"}}, {"$project": {"total_revenue": 1, "total_cost": 1, "return_cost": {"$sum": "$returns.refund_amount"}, "profit": {"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}}}, {"$sort": {"profit": -1}}])'),
    ("Find all users who have made a purchase within 24 hours of receiving a promotional email",
     'db.email_campaigns.aggregate([{"$match": {"type": "promotional"}}, {"$lookup": {"from": "orders", "localField": "user_id", "foreignField": "user_id", "as": "orders"}}, {"$unwind": "$orders"}, {"$match": {"$expr": {"$lt": [{"$subtract": ["$orders.order_date", "$sent_date"]}, 86400000]}}}, {"$group": {"_id": "$user_id"}}])'),
    ("Get the average order value for each user segment, broken down by device type",
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type"}, "avg_order_value": {"$avg": "$total_amount"}}}])'),
    ("Find all products that have a higher than average view-to-purchase conversion rate",
     'db.product_views.aggregate([{"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "items.product_id", "as": "orders"}}, {"$project": {"view_count": 1, "purchase_count": {"$size": "$orders"}, "conversion_rate": {"$divide": [{"$size": "$orders"}, "$view_count"]}}}, {"$group": {"_id": null, "avg_conversion_rate": {"$avg": "$conversion_rate"}}}, {"$lookup": {"from": "products", "pipeline": [], "as": "all_products"}}, {"$unwind": "$all_products"}, {"$lookup": {"from": "product_views", "localField": "all_products._id", "foreignField": "product_id", "as": "views"}}, {"$lookup": {"from": "orders", "localField": "all_products._id", "foreignField": "items.product_id", "as": "purchases"}}, {"$project": {"product_id": "$all_products._id", "product_name": "$all_products.name", "conversion_rate": {"$divide": [{"$size": "$purchases"}, {"$size": "$views"}]}}}, {"$match": {"$expr": {"$gt": ["$conversion_rate", "$avg_conversion_rate"]}}}])'),
    ("Find users who have made a purchase in the last 30 days", 
     'db.users.find({"last_purchase_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}})'),
    
    ("Get the top 5 products with the highest average rating", 
     'db.products.aggregate([{"$group": {"_id": "$_id", "avg_rating": {"$avg": "$ratings"}}}, {"$sort": {"avg_rating": -1}}, {"$limit": 5}])'),
    
    ("Find all orders with a total amount greater than $1000 and include customer details", 
     'db.orders.aggregate([{"$match": {"total_amount": {"$gt": 1000}}}, {"$lookup": {"from": "customers", "localField": "customer_id", "foreignField": "_id", "as": "customer_details"}}])'),
    
    ("Count the number of active users by country", 
     'db.users.aggregate([{"$match": {"status": "active"}}, {"$group": {"_id": "$country", "count": {"$sum": 1}}}])'),
    
    ("Find products that are low in stock (less than 10) and have high demand (ordered more than 50 times)", 
     'db.products.find({"stock_quantity": {"$lt": 10}, "order_count": {"$gt": 50}})'),
    
    ("Get the average order value for each month in the current year", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().getFullYear(), 0, 1)}}}, {"$group": {"_id": {"$month": "$order_date"}, "avg_order_value": {"$avg": "$total_amount"}}}])'),
    
    ("Find users who have not logged in for the past 90 days", 
     'db.users.find({"last_login": {"$lt": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}})'),
    
    ("Get the total revenue for each product category in the last quarter", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().setMonth(new Date().getMonth() - 3))}}}, {"$unwind": "$items"}, {"$group": {"_id": "$items.category", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),
    
    ("Find all blog posts with more than 100 likes and sort them by the number of comments", 
     'db.blog_posts.find({"likes": {"$gt": 100}}).sort({"comments": -1})'),
    
    ("Get the top 3 customers who have spent the most in each country", 
     'db.orders.aggregate([{"$group": {"_id": {"customer_id": "$customer_id", "country": "$shipping_address.country"}, "total_spent": {"$sum": "$total_amount"}}}, {"$sort": {"total_spent": -1}}, {"$group": {"_id": "$_id.country", "top_customers": {"$push": {"customer_id": "$_id.customer_id", "total_spent": "$total_spent"}}}}, {"$project": {"top_customers": {"$slice": ["$top_customers", 3]}}}])'),
    
    ("Find all products that have been reviewed by users from at least 5 different countries", 
     'db.reviews.aggregate([{"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}}}, {"$group": {"_id": "$_id.product_id", "country_count": {"$sum": 1}}}, {"$match": {"country_count": {"$gte": 5}}}])'),
    
    ("Get the average processing time for orders in each status", 
     'db.orders.aggregate([{"$group": {"_id": "$status", "avg_processing_time": {"$avg": {"$subtract": ["$completed_date", "$order_date"]}}}}])'),
    
    ("Find all users who have referred at least 3 other users who have made a purchase", 
     'db.users.aggregate([{"$lookup": {"from": "users", "localField": "_id", "foreignField": "referred_by", "as": "referrals"}}, {"$project": {"_id": 1, "purchasing_referrals": {"$size": {"$filter": {"input": "$referrals", "as": "referral", "cond": {"$eq": ["$$referral.has_purchased", true]}}}}}}, {"$match": {"purchasing_referrals": {"$gte": 3}}}])'),
    
    ("Find all products that have been viewed but never purchased", 
     'db.products.find({"_id": {"$in": db.product_views.distinct("product_id"), "$nin": db.orders.distinct("items.product_id")}})'),
    
    ("Get the total number of active subscriptions for each plan type", 
     'db.subscriptions.aggregate([{"$match": {"status": "active"}}, {"$group": {"_id": "$plan_type", "total_subscriptions": {"$sum": 1}}}])'),
    
    ("Find all orders that contain products from at least 3 different categories", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$_id", "categories": {"$addToSet": "$items.category"}}}, {"$project": {"category_count": {"$size": "$categories"}}}, {"$match": {"category_count": {"$gte": 3}}}])'),
    
    ("Get the average sentiment score for product reviews, grouped by product category", 
     'db.reviews.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$group": {"_id": "$product.category", "avg_sentiment": {"$avg": "$sentiment_score"}}}])'),
    
    ("Find all users who have made a purchase within 24 hours of receiving a promotional email", 
     'db.users.aggregate([{"$lookup": {"from": "email_campaigns", "localField": "_id", "foreignField": "user_id", "as": "emails"}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"emails": {"$elemMatch": {"type": "promotional", "sent_date": {"$lte": {"$add": ["$orders.order_date", 24 * 60 * 60 * 1000]}}}}}])'),
    
    ("Get the total revenue for each sales representative, broken down by product category", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": {"sales_rep": "$sales_rep_id", "category": "$items.category"}, "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),
    
    ("Find all products that have had a price increase of more than 10% in the last 6 months", 
     'db.price_history.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "initial_price": {"$first": "$price"}, "current_price": {"$last": "$price"}}}, {"$project": {"price_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$initial_price"]}, "$initial_price"]}, 100]}}}, {"$match": {"price_increase_percentage": {"$gt": 10}}}])'),
    
    ("Get the average time between user registration and first purchase for each acquisition channel", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"acquisition_channel": 1, "time_to_purchase": {"$subtract": [{"$min": "$orders.order_date"}, "$registration_date"]}}}, {"$group": {"_id": "$acquisition_channel", "avg_time": {"$avg": "$time_to_purchase"}}}])'),
    
    ("Find all blog posts that mention a specific keyword in either the title or content, and have at least 5 comments", 
     'db.blog_posts.find({"$or": [{"title": /keyword/i}, {"content": /keyword/i}], "comment_count": {"$gte": 5}})'),
    
    ("Get the top 5 most common words used in product reviews for each product category", 
     'db.reviews.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"category": "$product.category", "words": {"$split": ["$text", " "]}}}, {"$unwind": "$words"}, {"$group": {"_id": {"category": "$category", "word": "$words"}, "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$group": {"_id": "$_id.category", "top_words": {"$push": {"word": "$_id.word", "count": "$count"}}}}, {"$project": {"top_words": {"$slice": ["$top_words", 5]}}}])'),
    
    ("Find all users who have abandoned their shopping cart with a total value over $100 in the last 7 days", 
     'db.users.aggregate([{"$match": {"cart.last_updated": {"$gte": new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 100}}}])'),
    
    ("Get the average order value for each user segment, broken down by device type", 
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type"}, "avg_order_value": {"$avg": "$total_amount"}}}])'),
    
    ("Find all products that have been consistently rated above average for the past 3 months", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "avg_rating": {"$avg": "$rating"}}}, {"$group": {"_id": null, "overall_avg": {"$avg": "$avg_rating"}}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "product_id", "as": "product_reviews"}}, {"$match": {"$expr": {"$gt": [{"$avg": "$product_reviews.rating"}, "$overall_avg"]}}}])'),
    
    ("Get the total number of support tickets opened and resolved for each product, sorted by resolution rate", 
     'db.support_tickets.aggregate([{"$group": {"_id": "$product_id", "opened": {"$sum": 1}, "resolved": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, 1, 0]}}}}, {"$project": {"product_id": "$_id", "opened": 1, "resolved": 1, "resolution_rate": {"$divide": ["$resolved", "$opened"]}}}, {"$sort": {"resolution_rate": -1}}])'),
    
    ("Find all users who have made purchases on consecutive days", 
     'db.orders.aggregate([{"$group": {"_id": {"user_id": "$user_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$order_date"}}}}}, {"$sort": {"_id.user_id": 1, "_id.date": 1}}, {"$group": {"_id": "$_id.user_id", "dates": {"$push": "$_id.date"}}}, {"$project": {"consecutive_days": {"$reduce": {"input": {"$range": [1, {"$size": "$dates"}]}, "initialValue": false, "in": {"$or": ["$$value", {"$eq": [{"$subtract": [{"$toDate": {"$arrayElemAt": ["$dates", "$$this"]}}, {"$toDate": {"$arrayElemAt": ["$dates", {"$subtract": ["$$this", 1]}]}}]}, 86400000]}]}}}}}, {"$match": {"consecutive_days": true}}])'),
    
    ("Get the average customer satisfaction score for each support agent, considering only resolved tickets in the last 30 days", 
     'db.support_tickets.aggregate([{"$match": {"status": "resolved", "resolution_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$agent_id", "avg_satisfaction": {"$avg": "$satisfaction_score"}}}])'),
    
    ("Find all products that have been frequently bought together in the same order (appearing together in at least 10 orders)", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"product1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "product2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.product1": {"$ne": "$_id.product2"}, "count": {"$gte": 10}}}, {"$sort": {"count": -1}}])'),
    
    ("Get the total revenue and profit for each product, considering both direct sales and returns", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$items.product_id", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "total_cost": {"$sum": {"$multiply": ["$items.cost", "$items.quantity"]}}}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "product_id", "as": "returns"}}, {"$project": {"total_revenue": 1, "total_cost": 1, "return_cost": {"$sum": "$returns.refund_amount"}, "profit": {"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}}}, {"$sort": {"profit": -1}}])'),
    
    ("Find all users who have viewed a product page at least 5 times without making a purchase in the last 30 days", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "product_id": "$product_id"}, "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 5}}}, {"$lookup": {"from": "orders", "localField": "_id.user_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$not": {"$elemMatch": {"items.product_id": "$_id.product_id", "order_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}}}}])'),
    
    ("Get the average time spent on each page of the website, grouped by user segment", 
     'db.page_views.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"page_url": "$page_url", "segment": "$user.segment"}, "avg_time_spent": {"$avg": "$time_spent"}}}])'),
    
    ("Find all products that have a higher than average view-to-purchase conversion rate in the last 90 days", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "items.product_id", "as": "orders"}}, {"$project": {"view_count": 1, "purchase_count": {"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$gte": ["$$order.order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}}}}}, "conversion_rate": {"$divide": [{"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$gte": ["$$order.order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}}}}, "$view_count"]}}}, {"$group": {"_id": null, "avg_conversion_rate": {"$avg": "$conversion_rate"}}}, {"$lookup": {"from": "products", "pipeline": [], "as": "all_products"}}, {"$unwind": "$all_products"}, {"$lookup": {"from": "product_views", "localField": "all_products._id", "foreignField": "product_id", "as": "views"}}, {"$lookup": {"from": "orders", "localField": "all_products._id", "foreignField": "items.product_id", "as": "purchases"}}, {"$project": {"product_id": "$all_products._id", "product_name": "$all_products.name", "conversion_rate": {"$divide": [{"$size": "$purchases"}, {"$size": "$views"}]}}}, {"$match": {"$expr": {"$gt": ["$conversion_rate", "$avg_conversion_rate"]}}}])'),
    
    ("Get the most common product combinations in orders, considering only combinations that appear in at least 1% of all orders", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": {"products": "$_id", "count": "$count"}}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.01]}}}}}, {"$unwind": "$combinations"}, {"$sort": {"combinations.count": -1}}])'),
    ("Find all products that have been consistently rated above average by users from at least 3 different countries in the last 6 months", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}, "avg_rating": {"$avg": "$rating"}}}, {"$group": {"_id": "$_id.product_id", "country_ratings": {"$push": {"country": "$_id.country", "avg_rating": "$avg_rating"}}, "overall_avg": {"$avg": "$avg_rating"}}}, {"$project": {"country_ratings": 1, "overall_avg": 1, "above_average_countries": {"$size": {"$filter": {"input": "$country_ratings", "as": "cr", "cond": {"$gt": ["$$cr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_countries": {"$gte": 3}}}])'),

    ("Get the total revenue and number of orders for each country, sorted by revenue, considering only orders from the last year", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.country", "total_revenue": {"$sum": "$total_amount"}, "order_count": {"$sum": 1}}}, {"$sort": {"total_revenue": -1}}])'),

    ("Find all products that have a higher return rate when purchased online vs in-store", 
     'db.returns.aggregate([{"$lookup": {"from": "orders", "localField": "order_id", "foreignField": "_id", "as": "order"}}, {"$unwind": "$order"}, {"$group": {"_id": {"product_id": "$product_id", "channel": "$order.purchase_channel"}, "return_count": {"$sum": 1}, "total_sold": {"$sum": "$order.quantity"}}}, {"$group": {"_id": "$_id.product_id", "online_return_rate": {"$max": {"$cond": [{"$eq": ["$_id.channel", "online"]}, {"$divide": ["$return_count", "$total_sold"]}, 0]}}, "in_store_return_rate": {"$max": {"$cond": [{"$eq": ["$_id.channel", "in_store"]}, {"$divide": ["$return_count", "$total_sold"]}, 0]}}}}, {"$match": {"$expr": {"$gt": ["$online_return_rate", "$in_store_return_rate"]}}}])'),

    ("Get the average time between order placement and shipping for each shipping method, considering only orders that were delivered on time", 
     'db.orders.aggregate([{"$match": {"status": "delivered", "actual_delivery_date": {"$lte": "$estimated_delivery_date"}}}, {"$project": {"shipping_method": 1, "processing_time": {"$subtract": ["$shipped_date", "$order_date"]}}}, {"$group": {"_id": "$shipping_method", "avg_processing_time": {"$avg": "$processing_time"}}}])'),

    ("Find all users who have left a review for every product they've purchased in the last 6 months", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$unwind": "$items"}, {"$group": {"_id": null, "products": {"$addToSet": "$items.product_id"}}}], "as": "purchased_products"}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "products": {"$addToSet": "$product_id"}}}], "as": "reviewed_products"}}, {"$project": {"_id": 1, "purchased_products": {"$arrayElemAt": ["$purchased_products.products", 0]}, "reviewed_products": {"$arrayElemAt": ["$reviewed_products.products", 0]}}}, {"$match": {"$expr": {"$and": [{"$gt": [{"$size": "$purchased_products"}, 0]}, {"$eq": [{"$size": {"$setDifference": ["$purchased_products", "$reviewed_products"]}}, 0]}]}}}])'),

    ("Get the total revenue for each product attribute (e.g., color, size) combination, sorted by revenue, for products in the 'Electronics' category", 
     'db.order_items.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$match": {"product.category": "Electronics"}}, {"$unwind": "$attributes"}, {"$group": {"_id": {"product_id": "$product_id", "attribute": "$attributes.name", "value": "$attributes.value"}, "total_revenue": {"$sum": {"$multiply": ["$price", "$quantity"]}}}}, {"$sort": {"total_revenue": -1}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $200 and have received but not opened a cart abandonment email in the last 7 days", 
     'db.users.aggregate([{"$match": {"cart.items": {"$ne": []}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 200}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}])'),

    ("Get the most common product combinations in orders, considering only combinations that appear in at least 5% of all orders in the last 3 months", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": {"products": "$_id", "count": "$count"}}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$sort": {"combinations.count": -1}}])'),

    ("Find all products that have been consistently rated above average by users from at least 5 different countries in the last year, and have at least 100 reviews", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "country_ratings": {"$push": {"country": "$_id.country", "avg_rating": "$avg_rating"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$project": {"country_ratings": 1, "overall_avg": 1, "total_reviews": 1, "above_average_countries": {"$size": {"$filter": {"input": "$country_ratings", "as": "cr", "cond": {"$gt": ["$$cr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_countries": {"$gte": 5}, "total_reviews": {"$gte": 100}}}])'),

    ("Get the average customer lifetime value for each user segment, considering all purchases and returns", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "user_id", "as": "returns"}}, {"$project": {"segment": 1, "total_spent": {"$sum": "$orders.total_amount"}, "total_returned": {"$sum": "$returns.refund_amount"}, "lifetime_value": {"$subtract": [{"$sum": "$orders.total_amount"}, {"$sum": "$returns.refund_amount"}]}}}, {"$group": {"_id": "$segment", "avg_lifetime_value": {"$avg": "$lifetime_value"}}}])'),

    ("Find all products that have had a price increase of more than 15% in the last year but have not seen a corresponding increase in sales", 
     'db.products.aggregate([{"$lookup": {"from": "price_history", "localField": "_id", "foreignField": "product_id", "as": "price_history"}}, {"$project": {"name": 1, "current_price": 1, "price_year_ago": {"$arrayElemAt": [{"$filter": {"input": "$price_history", "as": "ph", "cond": {"$gte": ["$$ph.date", new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)]}}}, 0]}}}, {"$match": {"$expr": {"$gt": [{"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, 15]}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"year": {"$year": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}}], "as": "sales_data"}}, {"$match": {"$expr": {"$lte": [{"$arrayElemAt": ["$sales_data.sales", -1]}, {"$arrayElemAt": ["$sales_data.sales", -2]}]}}}])'),

    ("Get the average time between user registration and first purchase for each acquisition channel, considering only users who made their first purchase within 30 days of registration", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"acquisition_channel": 1, "registration_date": 1, "first_purchase_date": {"$min": "$orders.order_date"}, "days_to_purchase": {"$divide": [{"$subtract": [{"$min": "$orders.order_date"}, "$registration_date"]}, 24 * 60 * 60 * 1000]}}}, {"$match": {"days_to_purchase": {"$lte": 30}}}, {"$group": {"_id": "$acquisition_channel", "avg_days_to_purchase": {"$avg": "$days_to_purchase"}}}])'),

    ("Find all blog posts that mention a specific keyword in either the title or content, have at least 10 comments, and an average rating of 4 or higher", 
     'db.blog_posts.aggregate([{"$match": {"$or": [{"title": /keyword/i}, {"content": /keyword/i}], "comment_count": {"$gte": 10}}}, {"$lookup": {"from": "post_ratings", "localField": "_id", "foreignField": "post_id", "as": "ratings"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": {"$avg": "$ratings.rating"}}}, {"$match": {"avg_rating": {"$gte": 4}}}])'),

    ("Get the top 5 most common words used in product reviews for each product category, excluding common stop words", 
     'db.reviews.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"category": "$product.category", "words": {"$split": ["$text", " "]}}}, {"$unwind": "$words"}, {"$match": {"words": {"$nin": ["the", "a", "an", "and", "or", "but", "in", "on", "at", "to", "for", "of", "with", "by"]}}}, {"$group": {"_id": {"category": "$category", "word": "$words"}, "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$group": {"_id": "$_id.category", "top_words": {"$push": {"word": "$_id.word", "count": "$count"}}}}, {"$project": {"top_words": {"$slice": ["$top_words", 5]}}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $150 in the last 30 days and have opened but not clicked on a cart abandonment email", 
     'db.users.aggregate([{"$match": {"cart.last_updated": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 150}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}])'),

    ("Get the average order value for each user segment, broken down by device type and day of the week", 
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type", "day_of_week": {"$dayOfWeek": "$order_date"}}, "avg_order_value": {"$avg": "$total_amount"}}}])'),

    ("Find all products that have been consistently rated above average for the past 6 months, have at least 50 reviews, and have shown a month-over-month increase in sales volume", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "month": {"$month": "$date"}}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "monthly_ratings": {"$push": {"month": "$_id.month", "avg_rating": "$avg_rating", "review_count": "$review_count"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$match": {"total_reviews": {"$gte": 50}}}, {"$project": {"monthly_ratings": 1, "overall_avg": 1, "above_average_months": {"$size": {"$filter": {"input": "$monthly_ratings", "as": "mr", "cond": {"$gt": ["$$mr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_months": 6}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"month": {"$month": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}, {"$group": {"_id": "$month", "total_sales": {"$sum": "$sales"}}}, {"$sort": {"_id": 1}}], "as": "monthly_sales"}}, {"$project": {"_id": 1, "monthly_ratings": 1, "overall_avg": 1, "above_average_months": 1, "sales_increase": {"$reduce": {"input": {"$range": [1, {"$size": "$monthly_sales"}]}, "initialValue": true, "in": {"$and": ["$$value", {"$gt": [{"$arrayElemAt": ["$monthly_sales.total_sales", "$$this"]}, {"$arrayElemAt": ["$monthly_sales.total_sales", {"$subtract": ["$$this", 1]}]}]}]}}}}}, {"$match": {"sales_increase": true}}])'),

    ("Get the total number of support tickets opened and resolved for each product, sorted by resolution rate, considering only tickets from the last 90 days", 
     'db.support_tickets.aggregate([{"$match": {"created_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "opened": {"$sum": 1}, "resolved": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, 1, 0]}}}}, {"$project": {"product_id": "$_id", "opened": 1, "resolved": 1, "resolution_rate": {"$divide": ["$resolved", "$opened"]}}}, {"$sort": {"resolution_rate": -1}}])'),

    ("Find all users who have made purchases on consecutive days and have a total spend of over $1000 in the last 30 days", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$order_date"}}}, "daily_total": {"$sum": "$total_amount"}}}, {"$sort": {"_id.user_id": 1, "_id.date": 1}}, {"$group": {"_id": "$_id.user_id", "purchase_days": {"$push": "$_id.date"}, "total_spend": {"$sum": "$daily_total"}}}, {"$project": {"_id": 1, "total_spend": 1, "consecutive_days": {"$reduce": {"input": {"$range": [1, {"$size": "$purchase_days"}]}, "initialValue": false, "in": {"$or": ["$$value", {"$eq": [{"$subtract": [{"$toDate": {"$arrayElemAt": ["$purchase_days", "$$this"]}}, {"$toDate": {"$arrayElemAt": ["$purchase_days", {"$subtract": ["$$this", 1]}]}}]}, 86400000]}]}}}}}, {"$match": {"consecutive_days": true, "total_spend": {"$gt": 1000}}}])'),

    ("Get the average customer satisfaction score for each support agent, considering only resolved tickets in the last 60 days, and include the agent's department", 
     'db.support_tickets.aggregate([{"$match": {"status": "resolved", "resolution_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "support_agents", "localField": "agent_id", "foreignField": "_id", "as": "agent"}}, {"$unwind": "$agent"}, {"$group": {"_id": {"agent_id": "$agent_id", "department": "$agent.department"}, "avg_satisfaction": {"$avg": "$satisfaction_score"}}}, {"$project": {"agent_id": "$_id.agent_id", "department": "$_id.department", "avg_satisfaction": 1}}, {"$sort": {"avg_satisfaction": -1}}])'),

    ("Find all products that have been frequently bought together in the same order (appearing together in at least 5% of orders) and have a combined average rating of 4.5 or higher", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": {"products": "$_id", "count": "$count"}}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$lookup": {"from": "products", "localField": "combinations.products.p1", "foreignField": "_id", "as": "product1"}}, {"$lookup": {"from": "products", "localField": "combinations.products.p2", "foreignField": "_id", "as": "product2"}}, {"$project": {"products": ["$product1", "$product2"], "combined_rating": {"$avg": ["$product1.avg_rating", "$product2.avg_rating"]}, "count": "$combinations.count"}}, {"$match": {"combined_rating": {"$gte": 4.5}}}, {"$sort": {"count": -1}}])'),

    ("Get the total revenue and profit for each product, considering both direct sales and returns, and calculate the profit margin percentage", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$items.product_id", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "total_cost": {"$sum": {"$multiply": ["$items.cost", "$items.quantity"]}}}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "product_id", "as": "returns"}}, {"$project": {"total_revenue": 1, "total_cost": 1, "return_cost": {"$sum": "$returns.refund_amount"}, "profit": {"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}, "profit_margin": {"$multiply": [{"$divide": [{"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}, "$total_revenue"]}, 100]}}}, {"$sort": {"profit_margin": -1}}])'),

    ("Find all users who have viewed a product page at least 10 times without making a purchase in the last 90 days, and have opened marketing emails but not clicked on any links", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "product_id": "$product_id"}, "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 10}}}, {"$lookup": {"from": "orders", "let": {"user_id": "$_id.user_id", "product_id": "$_id.product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$$product_id", "$items.product_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}], "as": "purchases"}}, {"$match": {"purchases": {"$size": 0}}}, {"$lookup": {"from": "email_interactions", "let": {"user_id": "$_id.user_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "email_interactions"}}, {"$match": {"email_interactions": {"$ne": []}}}])'),

    ("Get the average time spent on each page of the website, grouped by user segment and device type, for sessions that resulted in a purchase in the last 30 days", 
     'db.page_views.aggregate([{"$match": {"timestamp": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$lookup": {"from": "orders", "let": {"user_id": "$user_id", "session_id": "$session_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$session_id", "$$session_id"]}]}}}], "as": "purchase"}}, {"$match": {"purchase": {"$ne": []}}}, {"$group": {"_id": {"page_url": "$page_url", "segment": "$user.segment", "device_type": "$device_type"}, "avg_time_spent": {"$avg": "$time_spent"}}}])'),

    ("Find all products that have a higher than average view-to-purchase conversion rate in the last 90 days, and have received at least 100 views", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 100}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$in": ["$$product_id", "$items.product_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "purchase_count": {"$sum": 1}}}], "as": "purchases"}}, {"$project": {"view_count": 1, "purchase_count": {"$arrayElemAt": ["$purchases.purchase_count", 0]}, "conversion_rate": {"$divide": [{"$arrayElemAt": ["$purchases.purchase_count", 0]}, "$view_count"]}}}, {"$group": {"_id": null, "avg_conversion_rate": {"$avg": "$conversion_rate"}, "products": {"$push": "$$ROOT"}}}, {"$unwind": "$products"}, {"$project": {"product_id": "$products._id", "view_count": "$products.view_count", "purchase_count": "$products.purchase_count", "conversion_rate": "$products.conversion_rate", "above_average": {"$gt": ["$products.conversion_rate", "$avg_conversion_rate"]}}}, {"$match": {"above_average": true}}, {"$sort": {"conversion_rate": -1}}])'),

    ("Get the most common product combinations in orders with at least 3 items, considering only orders from customers who have made at least 5 purchases in the last year", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$user_id", "order_count": {"$sum": 1}, "orders": {"$push": "$$ROOT"}}}, {"$match": {"order_count": {"$gte": 5}}}, {"$unwind": "$orders"}, {"$match": {"$expr": {"$gte": [{"$size": "$orders.items"}, 3]}}}, {"$unwind": "$orders.items"}, {"$unwind": "$orders.items"}, {""$unwind": "$orders.items"}, {"$group": {"_id": {"order_id": "$orders._id", "p1": {"$min": ["$orders.items.product_id", "$$ROOT.orders.items.product_id"]}, "p2": {"$max": ["$orders.items.product_id", "$$ROOT.orders.items.product_id"]}}}}, {"$group": {"_id": {"p1": "$_id.p1", "p2": "$_id.p2"}, "count": {"$sum": 1}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$sort": {"count": -1}}, {"$limit": 10}])'),

    ("Find all users who have made purchases in at least 5 different product categories and have left reviews for products in each of those categories", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$unwind": "$orders"}, {"$unwind": "$orders.items"}, {"$group": {"_id": {"user_id": "$_id", "category": "$orders.items.category"}}}, {"$group": {"_id": "$_id.user_id", "categories": {"$addToSet": "$_id.category"}}}, {"$match": {"$expr": {"$gte": [{"$size": "$categories"}, 5]}}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id", "categories": "$categories"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$product_category", "$$categories"]}]}}}, {"$group": {"_id": "$product_category"}}], "as": "reviewed_categories"}}, {"$project": {"categories": 1, "reviewed_categories": {"$size": "$reviewed_categories"}}}, {"$match": {"$expr": {"$eq": ["$reviewed_categories", {"$size": "$categories"}]}}}])'),

    ("Get the average response time for customer support tickets, grouped by priority level and department, considering only tickets created during business hours (9 AM to 5 PM) on weekdays", 
     'db.support_tickets.aggregate([{"$match": {"$expr": {"$and": [{"$gte": [{"$hour": "$created_date"}, 9]}, {"$lt": [{"$hour": "$created_date"}, 17]}, {"$in": [{"$dayOfWeek": "$created_date"}, [2, 3, 4, 5, 6]]}]}}}, {"$project": {"priority": 1, "department": 1, "response_time": {"$subtract": ["$first_response_date", "$created_date"]}}}, {"$group": {"_id": {"priority": "$priority", "department": "$department"}, "avg_response_time": {"$avg": "$response_time"}}}])'),

    ("Find all products that have been consistently top sellers (in the top 10% by sales volume) for the past 6 months, but have received lower than average ratings in the last 30 days", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 6 * 30 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$group": {"_id": {"product_id": "$items.product_id", "month": {"$month": "$order_date"}}, "sales_volume": {"$sum": "$items.quantity"}}}, {"$group": {"_id": "$_id.month", "products": {"$push": {"product_id": "$_id.product_id", "sales_volume": "$sales_volume"}}}}, {"$project": {"top_sellers": {"$slice": [{"$sortArray": {"input": "$products", "sortBy": {"sales_volume": -1}}}, {"$ceil": {"$multiply": [{"$size": "$products"}, 0.1]}}]}}}, {"$unwind": "$top_sellers"}, {"$group": {"_id": "$top_sellers.product_id", "months_as_top_seller": {"$sum": 1}}}, {"$match": {"months_as_top_seller": 6}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "avg_rating": {"$avg": "$rating"}}}], "as": "recent_ratings"}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "product_id", "as": "all_ratings"}}, {"$project": {"_id": 1, "months_as_top_seller": 1, "recent_avg_rating": {"$arrayElemAt": ["$recent_ratings.avg_rating", 0]}, "overall_avg_rating": {"$avg": "$all_ratings.rating"}}}, {"$match": {"$expr": {"$lt": ["$recent_avg_rating", "$overall_avg_rating"]}}}])'),

    ("Get the total revenue from each marketing channel, broken down by product category and user segment, for the last quarter", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().setMonth(new Date().getMonth() - 3))}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$unwind": "$items"}, {"$group": {"_id": {"channel": "$user.acquisition_channel", "category": "$items.category", "segment": "$user.segment"}, "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}])'),

    ("Find all users who have written reviews for products they haven't purchased, and include the sentiment score of those reviews", 
     'db.reviews.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$user_id", "product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$$product_id", "$items.product_id"]}]}}}], "as": "matching_orders"}}, {"$match": {"matching_orders": {"$size": 0}}}, {"$lookup": {"from": "sentiment_analysis", "localField": "_id", "foreignField": "review_id", "as": "sentiment"}}, {"$project": {"user_id": 1, "product_id": 1, "review_text": 1, "sentiment_score": {"$arrayElemAt": ["$sentiment.score", 0]}}}])'),

    ("Get the average sentiment score for product reviews, grouped by user's age range and product category, considering only verified purchases", 
     'db.reviews.aggregate([{"$match": {"verified_purchase": true}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$group": {"_id": {"age_range": {"$switch": {"branches": [{"case": {"$lt": ["$user.age", 18]}, "then": "Under 18"}, {"case": {"$lt": ["$user.age", 30]}, "then": "18-29"}, {"case": {"$lt": ["$user.age", 50]}, "then": "30-49"}, {"case": {"$lt": ["$user.age", 65]}, "then": "50-64"}], "default": "65 and over"}}, "category": "$product.category"}, "avg_sentiment": {"$avg": "$sentiment_score"}}}])'),

    ("Find all products that have had a significant increase in views (more than 50%) but no corresponding increase in sales in the last 30 days compared to the previous 30 days, and include the top 5 keywords from their recent reviews", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "period": {"$cond": [{"$gte": ["$view_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, "current", "previous"]}}, "view_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "current_views": {"$sum": {"$cond": [{"$eq": ["$_id.period", "current"]}, "$view_count", 0]}}, "previous_views": {"$sum": {"$cond": [{"$eq": ["$_id.period", "previous"]}, "$view_count", 0]}}}}, {"$project": {"product_id": "$_id", "view_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_views", "$previous_views"]}, "$previous_views"]}, 100]}}}, {"$match": {"view_increase_percentage": {"$gt": 50}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$product_id"}, "pipeline": [{"$match": {"order_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}, "$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$group": {"_id": {"product_id": "$$product_id", "period": {"$cond": [{"$gte": ["$order_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, "current", "previous"]}}, "sales_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "current_sales": {"$sum": {"$cond": [{"$eq": ["$_id.period", "current"]}, "$sales_count", 0]}}, "previous_sales": {"$sum": {"$cond": [{"$eq": ["$_id.period", "previous"]}, "$sales_count", 0]}}}}], "as": "sales_data"}}, {"$match": {"$expr": {"$lte": [{"$arrayElemAt": ["$sales_data.current_sales", 0]}, {"$arrayElemAt": ["$sales_data.previous_sales", 0]}]}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}]}}}, {"$project": {"words": {"$split": ["$review_text", " "]}}}, {"$unwind": "$words"}, {"$group": {"_id": "$words", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 5}], "as": "top_keywords"}}, {"$project": {"product_id": 1, "view_increase_percentage": 1, "top_keywords": 1}}])'),

    ("Get the average time between order placement and shipping for each shipping method, considering only orders that were delivered on time and had a customer satisfaction rating of 4 or higher", 
     'db.orders.aggregate([{"$match": {"status": "delivered", "actual_delivery_date": {"$lte": "$estimated_delivery_date"}}}, {"$lookup": {"from": "customer_feedback", "localField": "_id", "foreignField": "order_id", "as": "feedback"}}, {"$match": {"feedback.satisfaction_rating": {"$gte": 4}}}, {"$project": {"shipping_method": 1, "processing_time": {"$subtract": ["$shipped_date", "$order_date"]}}}, {"$group": {"_id": "$shipping_method", "avg_processing_time": {"$avg": "$processing_time"}}}])'),

    ("Find all users who have left a review for every product they've purchased in the last 6 months, and have an average review rating higher than the overall average", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$unwind": "$items"}, {"$group": {"_id": null, "products": {"$addToSet": "$items.product_id"}}}], "as": "purchased_products"}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "products": {"$addToSet": "$product_id"}, "avg_rating": {"$avg": "$rating"}}}], "as": "reviewed_products"}}, {"$project": {"_id": 1, "purchased_products": {"$arrayElemAt": ["$purchased_products.products", 0]}, "reviewed_products": {"$arrayElemAt": ["$reviewed_products.products", 0]}, "user_avg_rating": {"$arrayElemAt": ["$reviewed_products.avg_rating", 0]}}}, {"$match": {"$expr": {"$and": [{"$gt": [{"$size": "$purchased_products"}, 0]}, {"$eq": [{"$size": {"$setDifference": ["$purchased_products", "$reviewed_products"]}}, 0]}]}}}, {"$lookup": {"from": "reviews", "pipeline": [{"$group": {"_id": null, "overall_avg_rating": {"$avg": "$rating"}}}], "as": "overall_rating"}}, {"$project": {"_id": 1, "user_avg_rating": 1, "overall_avg_rating": {"$arrayElemAt": ["$overall_rating.overall_avg_rating", 0]}}}, {"$match": {"$expr": {"$gt": ["$user_avg_rating", "$overall_avg_rating"]}}}])'),

    ("Get the total revenue for each product attribute (e.g., color, size) combination, sorted by revenue, for products in the 'Electronics' category, and include the percentage of total category revenue", 
     'db.order_items.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$match": {"product.category": "Electronics"}}, {"$unwind": "$attributes"}, {"$group": {"_id": {"product_id": "$product_id", "attribute": "$attributes.name", "value": "$attributes.value"}, "total_revenue": {"$sum": {"$multiply": ["$price", "$quantity"]}}}}, {"$group": {"_id": null, "total_category_revenue": {"$sum": "$total_revenue"}, "attribute_revenues": {"$push": "$$ROOT"}}}, {"$unwind": "$attribute_revenues"}, {"$project": {"_id": "$attribute_revenues._id", "total_revenue": "$attribute_revenues.total_revenue", "percentage_of_category_revenue": {"$multiply": [{"$divide": ["$attribute_revenues.total_revenue", "$total_category_revenue"]}, 100]}}}, {"$sort": {"total_revenue": -1}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $200 and have received but not opened a cart abandonment email in the last 7 days, and include their last successful purchase date and total spend", 
     'db.users.aggregate([{"$match": {"cart.items": {"$ne": []}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 200}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$project": {"_id": 1, "cart_total": 1, "last_purchase_date": {"$max": "$orders.order_date"}, "total_spend": {"$sum": "$orders.total_amount"}}}])'),

    ("Get the most common product combinations in orders, considering only combinations that appear in at least 5% of all orders in the last 3 months, and include the average order value for orders containing each combination", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"order_id": "$_id", "p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "order_total": {"$first": "$total_amount"}}}, {"$group": {"_id": {"p1": "$_id.p1", "p2": "$_id.p2"}, "count": {"$sum": 1}, "total_order_value": {"$sum": "$order_total"}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": "$$ROOT"}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$project": {"products": "$combinations._id", "count": "$combinations.count", "avg_order_value": {"$divide": ["$combinations.total_order_value", "$combinations.count"]}}}, {"$sort": {"count": -1}}])'),

    ("Find all products that have been consistently rated above average by users from at least 5 different countries in the last year, have at least 100 reviews, and show the top 3 most common positive and negative keywords from their reviews", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "country_ratings": {"$push": {"country": "$_id.country", "avg_rating": "$avg_rating"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$project": {"country_ratings": 1, "overall_avg": 1, "total_reviews": 1, "above_average_countries": {"$size": {"$filter": {"input": "$country_ratings", "as": "cr", "cond": {"$gt": ["$$cr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_countries": {"$gte": 5}, "total_reviews": {"$gte": 100}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$product_id", "$$product_id"]}}}, {"$project": {"words": {"$split": ["$review_text", " "]}, "sentiment": {"$cond": [{"$gte": ["$rating", 4]}, "positive", "negative"]}}}, {"$unwind": "$words"}, {"$group": {"_id": {"word": "$words", "sentiment": "$sentiment"}, "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$group": {"_id": "$_id.sentiment", "top_words": {"$push": {"word": "$_id.word", "count": "$count"}}}}, {"$project": {"top_words": {"$slice": ["$top_words", 3]}}}], "as": "review_keywords"}}, {"$project": {"_id": 1, "above_average_countries": 1, "total_reviews": 1, "positive_keywords": {"$arrayElemAt": [{"$filter": {"input": "$review_keywords", "as": "rk", "cond": {"$eq": ["$$rk._id", "positive"]}}}, 0]}, "negative_keywords": {"$arrayElemAt": [{"$filter": {"input": "$review_keywords", "as": "rk", "cond": {"$eq": ["$$rk._id", "negative"]}}}, 0]}}}])'),

    ("Get the average customer lifetime value for each user segment, considering all purchases and returns, and include the percentage of customers in each segment who have made a purchase in the last 30 days", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "user_id", "as": "returns"}}, {"$project": {"segment": 1, "total_spent": {"$sum": "$orders.total_amount"}, "total_returned": {"$sum": "$returns.refund_amount"}, "lifetime_value": {"$subtract": [{"$sum": "$orders.total_amount"}, {"$sum": "$returns.refund_amount"}]}, "recent_purchase": {"$gt": [{"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$gte": ["$$order.order_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}}}}}, 0]}}}, {"$group": {"_id": "$segment", "avg_lifetime_value": {"$avg": "$lifetime_value"}, "total_customers": {"$sum": 1}, "recent_purchasers": {"$sum": {"$cond": ["$recent_purchase", 1, 0]}}}}, {"$project": {"avg_lifetime_value": 1, "recent_purchase_percentage": {"$multiply": [{"$divide": ["$recent_purchasers", "$total_customers"]}, 100]}}}])'),

    ("Find all products that have had a price increase of more than 15% in the last year but have not seen a corresponding increase in sales, and include the top 3 competitor products that have gained market share in the same period", 
     'db.products.aggregate([{"$lookup": {"from": "price_history", "localField": "_id", "foreignField": "product_id", "as": "price_history"}}, {"$project": {"name": 1, "category": 1, "current_price": 1, "price_year_ago": {"$arrayElemAt": [{"$filter": {"input": "$price_history", "as": "ph", "cond": {"$gte": ["$$ph.date", new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)]}}}, 0]}}}, {"$match": {"$expr": {"$gt": [{"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, 15]}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"year": {"$year": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}}], "as": "sales_data"}}, {"$match": {"$expr": {"$lte": [{"$arrayElemAt": ["$sales_data.sales", -1]}, {"$arrayElemAt": ["$sales_data.sales", -2]}]}}}, {"$lookup": {"from": "market_share", "let": {"product_id": "$_id", "category": "$category"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$category", "$$category"]}, {"$ne": ["$product_id", "$$product_id"]}, {"$gt": ["$current_share", "$previous_share"]}]}}}, {"$sort": {"share_gain": -1}}, {"$limit": 3}], "as": "competitors"}}, {"$project": {"name": 1, "category": 1, "price_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, "competitors": 1}}])'),

    ("Get the average time between user registration and first purchase for each acquisition channel, considering only users who made their first purchase within 30 days of registration, and include the average order value of the first purchase", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"acquisition_channel": 1, "registration_date": 1, "first_purchase": {"$arrayElemAt": [{"$filter": {"input": "$orders", "as": "order", "cond": {"$eq": ["$$order.order_date", {"$min": "$orders.order_date"}]}}}, 0]}}}, {"$project": {"acquisition_channel": 1, "days_to_purchase": {"$divide": [{"$subtract": ["$first_purchase.order_date", "$registration_date"]}, 24 * 60 * 60 * 1000]}, "first_purchase_value": "$first_purchase.total_amount"}}, {"$match": {"days_to_purchase": {"$lte": 30}}}, {"$group": {"_id": "$acquisition_channel", "avg_days_to_purchase": {"$avg": "$days_to_purchase"}, "avg_first_purchase_value": {"$avg": "$first_purchase_value"}}}])'),

    ("Find all blog posts that mention a specific keyword in either the title or content, have at least 10 comments, an average rating of 4 or higher, and include the top 5 related products based on user engagement after viewing the blog post", 
     'db.blog_posts.aggregate([{"$match": {"$or": [{"title": /keyword/i}, {"content": /keyword/i}], "comment_count": {"$gte": 10}}}, {"$lookup": {"from": "post_ratings", "localField": "_id", "foreignField": "post_id", "as": "ratings"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": {"$avg": "$ratings.rating"}}}, {"$match": {"avg_rating": {"$gte": 4}}}, {"$lookup": {"from": "user_activity", "let": {"post_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$viewed_post", "$$post_id"]}}}, {"$lookup": {"from": "product_views", "let": {"user_id": "$user_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gt": ["$view_date", "$activity_date"]}]}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}], "as": "related_product_views"}}, {"$unwind": "$related_product_views"}, {"$group": {"_id": "$related_product_views._id", "total_views": {"$sum": "$related_product_views.view_count"}}}, {"$sort": {"total_views": -1}}, {"$limit": 5}], "as": "related_products"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": 1, "related_products": 1}}])'),

    ("Get the top 5 most common words used in product reviews for each product category, excluding common stop words, and include the sentiment score associated with each word", 
     'db.reviews.aggregate([{"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"category": "$product.category", "words": {"$split": ["$text", " "]}, "sentiment_score": 1}}, {"$unwind": "$words"}, {"$match": {"words": {"$nin": ["the", "a", "an", "and", "or", "but", "in", "on", "at", "to", "for", "of", "with", "by"]}}}, {"$group": {"_id": {"category": "$category", "word": "$words"}, "count": {"$sum": 1}, "total_sentiment": {"$sum": "$sentiment_score"}}}, {"$project": {"count": 1, "avg_sentiment": {"$divide": ["$total_sentiment", "$count"]}}}, {"$sort": {"count": -1}}, {"$group": {"_id": "$_id.category", "top_words": {"$push": {"word": "$_id.word", "count": "$count", "avg_sentiment": "$avg_sentiment"}}}}, {"$project": {"top_words": {"$slice": ["$top_words", 5]}}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $150 in the last 30 days and have opened but not clicked on a cart abandonment email, and include their browsing history for the past week", 
     'db.users.aggregate([{"$match": {"cart.last_updated": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 150}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}, {"$lookup": {"from": "browsing_history", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$timestamp", new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)]}]}}}, {"$sort": {"timestamp": -1}}], "as": "recent_browsing_history"}}, {"$project": {"_id": 1, "cart_total": 1, "recent_browsing_history": 1}}])'),

    ("Get the average order value for each user segment, broken down by device type and day of the week, and include the percentage of orders that were made using a promotional code", 
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type", "day_of_week": {"$dayOfWeek": "$order_date"}}, "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$total_amount"}, "promo_orders": {"$sum": {"$cond": [{"$ne": ["$promo_code", null]}, 1, 0]}}}}, {"$project": {"_id": 1, "avg_order_value": {"$divide": ["$total_amount", "$total_orders"]}, "promo_percentage": {"$multiply": [{"$divide": ["$promo_orders", "$total_orders"]}, 100]}}}])'),

    ("Find all products that have been consistently rated above average for the past 6 months, have at least 50 reviews, and have shown a month-over-month increase in sales volume, and include the top 3 customer segments purchasing these products", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "month": {"$month": "$date"}}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "monthly_ratings": {"$push": {"month": "$_id.month", "avg_rating": "$avg_rating", "review_count": "$review_count"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$match": {"total_reviews": {"$gte": 50}}}, {"$project": {"monthly_ratings": 1, "overall_avg": 1, "above_average_months": {"$size": {"$filter": {"input": "$monthly_ratings", "as": "mr", "cond": {"$gt": ["$$mr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_months": 6}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"month": {"$month": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}, {"$group": {"_id": "$month", "total_sales": {"$sum": "$sales"}}}, {"$sort": {"_id": 1}}], "as": "monthly_sales"}}, {"$project": {"_id": 1, "monthly_ratings": 1, "overall_avg": 1, "above_average_months": 1, "sales_increase": {"$reduce": {"input": {"$range": [1, {"$size": "$monthly_sales"}]}, "initialValue": true, "in": {"$and": ["$$value", {"$gt": [{"$arrayElemAt": ["$monthly_sales.total_sales", "$$this"]}, {"$arrayElemAt": ["$monthly_sales.total_sales", {"$subtract": ["$$this", 1]}]}]}]}}}}}, {"$match": {"sales_increase": true}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "order_count": {"$sum": 1}}}, {"$sort": {"order_count": -1}}, {"$limit": 3}], "as": "top_customer_segments"}}, {"$project": {"_id": 1, "monthly_ratings": 1, "overall_avg": 1, "above_average_months": 1, "top_customer_segments": 1}}])'),

    ("Get the total number of support tickets opened and resolved for each product, sorted by resolution rate, considering only tickets from the last 90 days, and include the average customer satisfaction score for resolved tickets", 
     'db.support_tickets.aggregate([{"$match": {"created_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "opened": {"$sum": 1}, "resolved": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, 1, 0]}}, "total_satisfaction": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, "$satisfaction_score", 0]}}}}, {"$project": {"product_id": "$_id", "opened": 1, "resolved": 1, "resolution_rate": {"$divide": ["$resolved", "$opened"]}, "avg_satisfaction": {"$cond": [{"$eq": ["$resolved", 0]}, null, {"$divide": ["$total_satisfaction", "$resolved"]}]}}}, {"$sort": {"resolution_rate": -1}}])'),

    ("Find all users who have made purchases on consecutive days and have a total spend of over $1000 in the last 30 days, and include their most frequently purchased product category and average order value", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$order_date"}}}, "daily_total": {"$sum": "$total_amount"}, "daily_orders": {"$push": "$$ROOT"}}}, {"$sort": {"_id.user_id": 1, "_id.date": 1}}, {"$group": {"_id": "$_id.user_id", "purchase_days": {"$push": "$_id.date"}, "total_spend": {"$sum": "$daily_total"}, "all_orders": {"$push": "$daily_orders"}}}, {"$project": {"_id": 1, "total_spend": 1, "consecutive_days": {"$reduce": {"input": {"$range": [1, {"$size": "$purchase_days"}]}, "initialValue": false, "in": {"$or": ["$$value", {"$eq": [{"$subtract": [{"$toDate": {"$arrayElemAt": ["$purchase_days", "$$this"]}}, {"$toDate": {"$arrayElemAt": ["$purchase_days", {"$subtract": ["$$this", 1]}]}}]}, 86400000]}]}}}, "all_orders": 1}}, {"$match": {"consecutive_days": true, "total_spend": {"$gt": 1000}}}, {"$unwind": "$all_orders"}, {"$unwind": "$all_orders"}, {"$unwind": "$all_orders.items"}, {"$group": {"_id": {"user_id": "$_id", "category": "$all_orders.items.category"}, "category_count": {"$sum": 1}, "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$all_orders.total_amount"}}}, {"$sort": {"category_count": -1}}, {"$group": {"_id": "$_id.user_id", "top_category": {"$first": "$_id.category"}, "avg_order_value": {"$avg": {"$divide": ["$total_amount", "$total_orders"]}}}}, {"$project": {"_id": 1, "top_category": 1, "avg_order_value": 1}}])'),

    ("Get the average customer satisfaction score for each support agent, considering only resolved tickets in the last 60 days, and include the agent's department and the percentage of tickets resolved within the SLA time frame", 
     'db.support_tickets.aggregate([{"$match": {"status": "resolved", "resolution_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "support_agents", "localField": "agent_id", "foreignField": "_id", "as": "agent"}}, {"$unwind": "$agent"}, {"$project": {"agent_id": 1, "department": "$agent.department", "satisfaction_score": 1, "within_sla": {"$lte": ["$resolution_time", "$sla_time"]}}}, {"$group": {"_id": {"agent_id": "$agent_id", "department": "$department"}, "avg_satisfaction": {"$avg": "$satisfaction_score"}, "total_tickets": {"$sum": 1}, "within_sla_count": {"$sum": {"$cond": ["$within_sla", 1, 0]}}}}, {"$project": {"agent_id": "$_id.agent_id", "department": "$_id.department", "avg_satisfaction": 1, "sla_percentage": {"$multiply": [{"$divide": ["$within_sla_count", "$total_tickets"]}, 100]}}}, {"$sort": {"avg_satisfaction": -1}}])'),

    ("Find all products that have been frequently bought together in the same order (appearing together in at least 5% of orders) and have a combined average rating of 4.5 or higher, and include the top 3 customer segments purchasing these product combinations", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}, "order_ids": {"$addToSet": "$_id"}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": "$$ROOT"}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$lookup": {"from": "products", "localField": "combinations._id.p1", "foreignField": "_id", "as": "product1"}}, {"$lookup": {"from": "products", "localField": "combinations._id.p2", "foreignField": "_id", "as": "product2"}}, {"$project": {"products": ["$product1", "$product2"], "combined_rating": {"$avg": ["$product1.avg_rating", "$product2.avg_rating"]}, "count": "$combinations.count", "order_ids": "$combinations.order_ids"}}, {"$match": {"combined_rating": {"$gte": 4.5}}}, {"$lookup": {"from": "orders", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$order_ids"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_customer_segments"}}, {"$project": {"products": 1, "combined_rating": 1, "count": 1, "top_customer_segments": 1}}, {"$sort": {"count": -1}}])'),

    ("Get the total revenue and profit for each product, considering both direct sales and returns, and calculate the profit margin percentage, including a breakdown of sales by customer segment", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$group": {"_id": "$items.product_id", "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "total_cost": {"$sum": {"$multiply": ["$items.cost", "$items.quantity"]}}, "order_ids": {"$addToSet": "$_id"}}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "product_id", "as": "returns"}}, {"$project": {"total_revenue": 1, "total_cost": 1, "return_cost": {"$sum": "$returns.refund_amount"}, "profit": {"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}, "profit_margin": {"$multiply": [{"$divide": [{"$subtract": ["$total_revenue", {"$add": ["$total_cost", {"$sum": "$returns.refund_amount"}]}]}, "$total_revenue"]}, 100]}, "order_ids": 1}}, {"$lookup": {"from": "orders", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$order_ids"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "segment_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}, {"$project": {"segment": "$_id", "segment_revenue": 1, "_id": 0}}], "as": "segment_breakdown"}}, {"$project": {"total_revenue": 1, "total_cost": 1, "return_cost": 1, "profit": 1, "profit_margin": 1, "segment_breakdown": 1}}, {"$sort": {"profit_margin": -1}}])'),

    ("Find all users who have viewed a product page at least 10 times without making a purchase in the last 90 days, have opened marketing emails but not clicked on any links, and include their top 5 most viewed product categories", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "product_id": "$product_id"}, "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 10}}}, {"$lookup": {"from": "orders", "let": {"user_id": "$_id.user_id", "product_id": "$_id.product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$$product_id", "$items.product_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}], "as": "purchases"}}, {"$match": {"purchases": {"$size": 0}}}, {"$lookup": {"from": "email_interactions", "let": {"user_id": "$_id.user_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "email_interactions"}}, {"$match": {"email_interactions": {"$ne": []}}}, {"$group": {"_id": "$_id.user_id", "product_views": {"$push": {"product_id": "$_id.product_id", "view_count": "$view_count"}}}}, {"$lookup": {"from": "products", "localField": "product_views.product_id", "foreignField": "_id", "as": "product_details"}}, {"$project": {"_id": 1, "product_views": {"$map": {"input": "$product_views", "as": "pv", "in": {"product_id": "$$pv.product_id", "view_count": "$$pv.view_count", "category": {"$arrayElemAt": [{"$filter": {"input": "$product_details", "as": "pd", "cond": {"$eq": ["$$pd._id", "$$pv.product_id"]}}}, 0]}.category}}}}}, {"$unwind": "$product_views"}, {"$group": {"_id": {"user_id": "$_id", "category": "$product_views.category"}, "category_views": {"$sum": "$product_views.view_count"}}}, {"$sort": {"category_views": -1}}, {"$group": {"_id": "$_id.user_id", "top_categories": {"$push": {"category": "$_id.category", "views": "$category_views"}}}}, {"$project": {"_id": 1, "top_categories": {"$slice": ["$top_categories", 5]}}}])'),

    ("Get the average time spent on each page of the website, grouped by user segment and device type, for sessions that resulted in a purchase in the last 30 days, and include the conversion rate for each page", 
     'db.page_views.aggregate([{"$match": {"timestamp": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$lookup": {"from": "orders", "let": {"user_id": "$user_id", "session_id": "$session_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$session_id", "$$session_id"]}]}}}], "as": "purchase"}}, {"$match": {"purchase": {"$ne": []}}}, {"$group": {"_id": {"page_url": "$page_url", "segment": "$user.segment", "device_type": "$device_type"}, "avg_time_spent": {"$avg": "$time_spent"}, "total_views": {"$sum": 1}, "purchases": {"$sum": 1}}}, {"$project": {"_id": 1, "avg_time_spent": 1, "conversion_rate": {"$divide": ["$purchases", "$total_views"]}}}, {"$sort": {"_id.segment": 1, "_id.device_type": 1, "avg_time_spent": -1}}])'),

    ("Find all products that have a higher than average view-to-purchase conversion rate in the last 90 days, have received at least 100 views, and include the top 3 traffic sources for these products", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}, {"$match": {"view_count": {"$gte": 100}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$in": ["$$product_id", "$items.product_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "purchase_count": {"$sum": 1}}}], "as": "purchases"}}, {"$project": {"view_count": 1, "purchase_count": {"$arrayElemAt": ["$purchases.purchase_count", 0]}, "conversion_rate": {"$divide": [{"$arrayElemAt": ["$purchases.purchase_count", 0]}, "$view_count"]}}}, {"$group": {"_id": null, "avg_conversion_rate": {"$avg": "$conversion_rate"}, "products": {"$push": "$$ROOT"}}}, {"$unwind": "$products"}, {"$project": {"product_id": "$products._id", "view_count": "$products.view_count", "purchase_count": "$products.purchase_count", "conversion_rate": "$products.conversion_rate", "above_average": {"$gt": ["$products.conversion_rate", "$avg_conversion_rate"]}}}, {"$match": {"above_average": true}}, {"$lookup": {"from": "product_views", "let": {"product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$view_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": "$traffic_source", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_traffic_sources"}}, {"$project": {"product_id": 1, "view_count": 1, "purchase_count": 1, "conversion_rate": 1, "top_traffic_sources": 1}}, {"$sort": {"conversion_rate": -1}}])'),

    ("Get the most common product combinations in orders with at least 3 items, considering only orders from customers who have made at least 5 purchases in the last year, and include the average customer lifetime value for customers who purchased each combination", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$user_id", "order_count": {"$sum": 1}, "total_spent": {"$sum": "$total_amount"}, "orders": {"$push": "$$ROOT"}}}, {"$match": {"order_count": {"$gte": 5}}}, {"$unwind": "$orders"}, {"$match": {"$expr": {"$gte": [{"$size": "$orders.items"}, 3]}}}, {"$unwind": "$orders.items"}, {"$unwind": "$orders.items"}, {"$group": {"_id": {"order_id": "$orders._id", "p1": {"$min": ["$orders.items.product_id", "$$ROOT.orders.items.product_id"]}, "p2": {"$max": ["$orders.items.product_id", "$$ROOT.orders.items.product_id"]}}, "user_id": {"$first": "$_id"}, "user_total_spent": {"$first": "$total_spent"}}}, {"$group": {"_id": {"p1": "$_id.p1", "p2": "$_id.p2"}, "count": {"$sum": 1}, "users": {"$addToSet": {"user_id": "$user_id", "total_spent": "$user_total_spent"}}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$project": {"products": ["$_id.p1", "$_id.p2"], "count": 1, "avg_customer_lifetime_value": {"$avg": "$users.total_spent"}}}, {"$sort": {"count": -1}}, {"$limit": 10}])'),

    ("Find all users who have made purchases in at least 5 different product categories and have left reviews for products in each of those categories, and include their average review rating and total spend across all categories", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$unwind": "$orders"}, {"$unwind": "$orders.items"}, {"$group": {"_id": {"user_id": "$_id", "category": "$orders.items.category"}, "total_spent": {"$sum": {"$multiply": ["$orders.items.price", "$orders.items.quantity"]}}}}, {"$group": {"_id": "$_id.user_id", "categories": {"$addToSet": "$_id.category"}, "category_spend": {"$push": {"category": "$_id.category", "total_spent": "$total_spent"}}}}, {"$match": {"$expr": {"$gte": [{"$size": "$categories"}, 5]}}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id", "categories": "$categories"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$product_category", "$$categories"]}]}}}, {"$group": {"_id": "$product_category", "avg_rating": {"$avg": "$rating"}}}], "as": "category_reviews"}}, {"$project": {"categories": 1, "category_spend": 1, "category_reviews": 1, "reviewed_categories": {"$size": "$category_reviews"}}}, {"$match": {"$expr": {"$eq": ["$reviewed_categories", {"$size": "$categories"}]}}}, {"$project": {"categories": 1, "category_spend": 1, "category_reviews": 1, "avg_overall_rating": {"$avg": "$category_reviews.avg_rating"}, "total_spend": {"$sum": "$category_spend.total_spent"}}}])'),

    ("Get the average response time for customer support tickets, grouped by priority level and department, considering only tickets created during business hours (9 AM to 5 PM) on weekdays, and include the percentage of tickets resolved within the SLA for each group", 
     'db.support_tickets.aggregate([{"$match": {"$expr": {"$and": [{"$gte": [{"$hour": "$created_date"}, 9]}, {"$lt": [{"$hour": "$created_date"}, 17]}, {"$in": [{"$dayOfWeek": "$created_date"}, [2, 3, 4, 5, 6]]}]}}}, {"$project": {"priority": 1, "department": 1, "response_time": {"$subtract": ["$first_response_date", "$created_date"]}, "resolution_time": {"$subtract": ["$resolved_date", "$created_date"]}, "within_sla": {"$lte": ["$resolution_time", "$sla_time"]}}}, {"$group": {"_id": {"priority": "$priority", "department": "$department"}, "avg_response_time": {"$avg": "$response_time"}, "total_tickets": {"$sum": 1}, "resolved_within_sla": {"$sum": {"$cond": ["$within_sla", 1, 0]}}}}, {"$project": {"_id": 1, "avg_response_time": 1, "sla_percentage": {"$multiply": [{"$divide": ["$resolved_within_sla", "$total_tickets"]}, 100]}}}])'),

    ("Find all products that have been consistently top sellers (in the top 10% by sales volume) for the past 6 months, but have received lower than average ratings in the last 30 days, and include the top 3 most common negative keywords from their recent reviews", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 6 * 30 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$group": {"_id": {"product_id": "$items.product_id", "month": {"$month": "$order_date"}}, "sales_volume": {"$sum": "$items.quantity"}}}, {"$group": {"_id": "$_id.month", "products": {"$push": {"product_id": "$_id.product_id", "sales_volume": "$sales_volume"}}}}, {"$project": {"top_sellers": {"$slice": [{"$sortArray": {"input": "$products", "sortBy": {"sales_volume": -1}}}, {"$ceil": {"$multiply": [{"$size": "$products"}, 0.1]}}]}}}, {"$unwind": "$top_sellers"}, {"$group": {"_id": "$top_sellers.product_id", "months_as_top_seller": {"$sum": 1}}}, {"$match": {"months_as_top_seller": 6}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "avg_rating": {"$avg": "$rating"}}}], "as": "recent_ratings"}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "product_id", "as": "all_ratings"}}, {"$project": {"_id": 1, "months_as_top_seller": 1, "recent_avg_rating": {"$arrayElemAt": ["$recent_ratings.avg_rating", 0]}, "overall_avg_rating": {"$avg": "$all_ratings.rating"}}}, {"$match": {"$expr": {"$lt": ["$recent_avg_rating", "$overall_avg_rating"]}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, {"$lte": ["$rating", 3]}]}}}, {"$project": {"words": {"$split": ["$review_text", " "]}}}, {"$unwind": "$words"}, {"$group": {"_id": "$words", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_negative_keywords"}}, {"$project": {"_id": 1, "months_as_top_seller": 1, "recent_avg_rating": 1, "overall_avg_rating": 1, "top_negative_keywords": 1}}])'),

    ("Get the total revenue from each marketing channel, broken down by product category and user segment, for the last quarter, and include the ROI for each channel based on the marketing spend", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(new Date().setMonth(new Date().getMonth() - 3))}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$unwind": "$items"}, {"$group": {"_id": {"channel": "$user.acquisition_channel", "category": "$items.category", "segment": "$user.segment"}, "total_revenue": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}}}, {"$group": {"_id": "$_id.channel", "category_segment_revenue": {"$push": {"category": "$_id.category", "segment": "$_id.segment", "revenue": "$total_revenue"}}, "total_channel_revenue": {"$sum": "$total_revenue"}}}, {"$lookup": {"from": "marketing_spend", "localField": "_id", "foreignField": "channel", "as": "spend"}}, {"$project": {"_id": 1, "category_segment_revenue": 1, "total_channel_revenue": 1, "marketing_spend": {"$arrayElemAt": ["$spend.amount", 0]}, "roi": {"$multiply": [{"$divide": [{"$subtract": ["$total_channel_revenue", {"$arrayElemAt": ["$spend.amount", 0]}]}, {"$arrayElemAt": ["$spend.amount", 0]}]}, 100]}}}, {"$sort": {"roi": -1}}])'),

    ("Find all users who have written reviews for products they haven't purchased, and include the sentiment score of those reviews and the user's browsing history for the products they reviewed", 
     'db.reviews.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$user_id", "product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$in": ["$$product_id", "$items.product_id"]}]}}}], "as": "matching_orders"}}, {"$match": {"matching_orders": {"$size": 0}}}, {"$lookup": {"from": "sentiment_analysis", "localField": "_id", "foreignField": "review_id", "as": "sentiment"}}, {"$lookup": {"from": "browsing_history", "let": {"user_id": "$user_id", "product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$product_id", "$$product_id"]}]}}}, {"$sort": {"timestamp": -1}}, {"$limit": 5}], "as": "product_browsing_history"}}, {"$project": {"user_id": 1, "product_id": 1, "review_text": 1, "sentiment_score": {"$arrayElemAt": ["$sentiment.score", 0]}, "product_browsing_history": 1}}])'),

    ("Get the average sentiment score for product reviews, grouped by user's age range and product category, considering only verified purchases, and include the most common positive and negative keywords for each group", 
     'db.reviews.aggregate([{"$match": {"verified_purchase": true}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$lookup": {"from": "sentiment_analysis", "localField": "_id", "foreignField": "review_id", "as": "sentiment"}}, {"$project": {"age_range": {"$switch": {"branches": [{"case": {"$lt": ["$user.age", 18]}, "then": "Under 18"}, {"case": {"$lt": ["$user.age", 30]}, "then": "18-29"}, {"case": {"$lt": ["$user.age", 50]}, "then": "30-49"}, {"case": {"$lt": ["$user.age", 65]}, "then": "50-64"}], "default": "65 and over"}}, "category": "$product.category", "sentiment_score": {"$arrayElemAt": ["$sentiment.score", 0]}, "review_text": 1, "rating": 1}}, {"$group": {"_id": {"age_range": "$age_range", "category": "$category"}, "avg_sentiment": {"$avg": "$sentiment_score"}, "reviews": {"$push": {"text": "$review_text", "rating": "$rating"}}}}, {"$project": {"_id": 1, "avg_sentiment": 1, "positive_reviews": {"$filter": {"input": "$reviews", "as": "review", "cond": {"$gte": ["$$review.rating", 4]}}}, "negative_reviews": {"$filter": {"input": "$reviews", "as": "review", "cond": {"$lte": ["$$review.rating", 2]}}}}}, {"$project": {"_id": 1, "avg_sentiment": 1, "positive_keywords": {"$slice": [{"$split": {"$reduce": {"input": "$positive_reviews", "initialValue": "", "in": {"$concat": ["$$value", " ", "$$this.text"]}}}, " "]}, 5]}, "negative_keywords": {"$slice": [{"$split": {"$reduce": {"input": "$negative_reviews", "initialValue": "", "in": {"$concat": ["$$value", " ", "$$this.text"]}}}, " "]}, 5]}}}])'),

    ("Find all products that have had a significant increase in views (more than 50%) but no corresponding increase in sales in the last 30 days compared to the previous 30 days, and include the top 5 keywords from their recent reviews and the average sentiment score of those reviews", 
     'db.product_views.aggregate([{"$match": {"view_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "period": {"$cond": [{"$gte": ["$view_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, "current", "previous"]}}, "view_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "current_views": {"$sum": {"$cond": [{"$eq": ["$_id.period", "current"]}, "$view_count", 0]}}, "previous_views": {"$sum": {"$cond": [{"$eq": ["$_id.period", "previous"]}, "$view_count", 0]}}}}, {"$project": {"product_id": "$_id", "view_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_views", "$previous_views"]}, "$previous_views"]}, 100]}}}, {"$match": {"view_increase_percentage": {"$gt": 50}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$product_id"}, "pipeline": [{"$match": {"order_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}, "$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$group": {"_id": {"product_id": "$$product_id", "period": {"$cond": [{"$gte": ["$order_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, "current", "previous"]}}, "sales_count": {"$sum": {"$size": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}}}}}, {"$group": {"_id": "$_id.product_id", "current_sales": {"$sum": {"$cond": [{"$eq": ["$_id.period", "current"]}, "$sales_count", 0]}}, "previous_sales": {"$sum": {"$cond": [{"$eq": ["$_id.period", "previous"]}, "$sales_count", 0]}}}}], "as": "sales_data"}}, {"$match": {"sales_data.current_sales": {"$lte": {"$arrayElemAt": ["$sales_data.previous_sales", 0]}}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}]}}}, {"$project": {"words": {"$split": ["$review_text", " "]}, "sentiment_score": 1}}, {"$unwind": "$words"}, {"$group": {"_id": null, "words": {"$push": "$words"}, "avg_sentiment": {"$avg": "$sentiment_score"}}}, {"$project": {"top_keywords": {"$slice": [{"$sortArray": {"input": {"$map": {"input": {"$setUnion": "$words"}, "as": "word", "in": {"word": "$$word", "count": {"$size": {"$filter": {"input": "$words", "as": "w", "cond": {"$eq": ["$$w", "$$word"]}}}}}}}, "sortBy": {"count": -1}}}, 5]}, "avg_sentiment": 1}}], "as": "review_data"}}, {"$project": {"product_id": 1, "view_increase_percentage": 1, "top_keywords": {"$arrayElemAt": ["$review_data.top_keywords", 0]}, "avg_sentiment": {"$arrayElemAt": ["$review_data.avg_sentiment", 0]}}}])'),

    ("Get the average time between order placement and shipping for each shipping method, considering only orders that were delivered on time and had a customer satisfaction rating of 4 or higher, and include the percentage of such orders for each shipping method", 
     'db.orders.aggregate([{"$match": {"status": "delivered", "actual_delivery_date": {"$lte": "$estimated_delivery_date"}}}, {"$lookup": {"from": "customer_feedback", "localField": "_id", "foreignField": "order_id", "as": "feedback"}}, {"$match": {"feedback.satisfaction_rating": {"$gte": 4}}}, {"$project": {"shipping_method": 1, "processing_time": {"$subtract": ["$shipped_date", "$order_date"]}}}, {"$group": {"_id": "$shipping_method", "avg_processing_time": {"$avg": "$processing_time"}, "order_count": {"$sum": 1}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "shipping_method", "as": "all_orders"}}, {"$project": {"shipping_method": "$_id", "avg_processing_time": 1, "order_count": 1, "total_orders": {"$size": "$all_orders"}, "percentage": {"$multiply": [{"$divide": ["$order_count", {"$size": "$all_orders"}]}, 100]}}}, {"$sort": {"avg_processing_time": 1}}])'),

    ("Find all users who have left a review for every product they've purchased in the last 6 months, have an average review rating higher than the overall average, and include their most frequently purchased product category and their average order value", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$unwind": "$items"}, {"$group": {"_id": null, "products": {"$addToSet": "$items.product_id"}, "total_spent": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "order_count": {"$sum": 1}, "categories": {"$push": "$items.category"}}}], "as": "purchased_products"}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "products": {"$addToSet": "$product_id"}, "avg_rating": {"$avg": "$rating"}}}], "as": "reviewed_products"}}, {"$project": {"_id": 1, "purchased_products": {"$arrayElemAt": ["$purchased_products.products", 0]}, "reviewed_products": {"$arrayElemAt": ["$reviewed_products.products", 0]}, "user_avg_rating": {"$arrayElemAt": ["$reviewed_products.avg_rating", 0]}, "total_spent": {"$arrayElemAt": ["$purchased_products.total_spent", 0]}, "order_count": {"$arrayElemAt": ["$purchased_products.order_count", 0]}, "categories": {"$arrayElemAt": ["$purchased_products.categories", 0]}}}, {"$match": {"$expr": {"$and": [{"$gt": [{"$size": "$purchased_products"}, 0]}, {"$eq": [{"$size": {"$setDifference": ["$purchased_products", "$reviewed_products"]}}, 0]}]}}}, {"$lookup": {"from": "reviews", "pipeline": [{"$group": {"_id": null, "overall_avg_rating": {"$avg": "$rating"}}}], "as": "overall_rating"}}, {"$match": {"$expr": {"$gt": ["$user_avg_rating", {"$arrayElemAt": ["$overall_rating.overall_avg_rating", 0]}]}}}, {"$project": {"_id": 1, "user_avg_rating": 1, "avg_order_value": {"$divide": ["$total_spent", "$order_count"]}, "most_frequent_category": {"$arrayElemAt": [{"$sortArray": {"input": {"$map": {"input": {"$setUnion": "$categories"}, "as": "category", "in": {"category": "$$category", "count": {"$size": {"$filter": {"input": "$categories", "as": "c", "cond": {"$eq": ["$$c", "$$category"]}}}}}}}, "sortBy": {"count": -1}}}, 0]}}}}])'),

    ("Get the most common product combinations in orders, considering only combinations that appear in at least 5% of all orders in the last 3 months, and include the average order value for orders containing each combination and the top 3 customer segments purchasing these product combinations", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"order_id": "$_id", "p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "order_total": {"$first": "$total_amount"}}}, {"$group": {"_id": {"p1": "$_id.p1", "p2": "$_id.p2"}, "count": {"$sum": 1}, "total_order_value": {"$sum": "$order_total"}, "order_ids": {"$push": "$_id.order_id"}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": "$$ROOT"}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$project": {"products": "$combinations._id", "count": "$combinations.count", "avg_order_value": {"$divide": ["$combinations.total_order_value", "$combinations.count"]}, "order_ids": "$combinations.order_ids"}}, {"$lookup": {"from": "orders", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$order_ids"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_customer_segments"}}, {"$project": {"products": 1, "count": 1, "avg_order_value": 1, "top_customer_segments": 1}}, {"$sort": {"count": -1}}])'),

    ("Find all products that have been consistently rated above average by users from at least 5 different countries in the last year, have at least 100 reviews, and show the top 3 most common positive and negative keywords from their reviews, along with the sentiment score distribution", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "country": "$user_country"}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "country_ratings": {"$push": {"country": "$_id.country", "avg_rating": "$avg_rating"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$project": {"country_ratings": 1, "overall_avg": 1, "total_reviews": 1, "above_average_countries": {"$size": {"$filter": {"input": "$country_ratings", "as": "cr", "cond": {"$gt": ["$$cr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_countries": {"$gte": 5}, "total_reviews": {"$gte": 100}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$product_id", "$$product_id"]}}}, {"$project": {"words": {"$split": ["$review_text", " "]}, "sentiment": {"$cond": [{"$gte": ["$rating", 4]}, "positive", "negative"]}, "sentiment_score": 1}}, {"$unwind": "$words"}, {"$group": {"_id": {"word": "$words", "sentiment": "$sentiment"}, "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$group": {"_id": "$_id.sentiment", "top_words": {"$push": {"word": "$_id.word", "count": "$count"}}}}, {"$project": {"top_words": {"$slice": ["$top_words", 3]}}}, {"$group": {"_id": null, "sentiments": {"$push": {"k": "$_id", "v": "$top_words"}}}}, {"$project": {"keywords": {"$arrayToObject": "$sentiments"}}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$$product_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$product_id", "$$product_id"]}}}, {"$group": {"_id": null, "sentiment_scores": {"$push": "$sentiment_score"}}}], "as": "sentiment_data"}}, {"$project": {"keywords": 1, "sentiment_distribution": {"$arrayElemAt": ["$sentiment_data.sentiment_scores", 0]}}}], "as": "review_data"}}, {"$project": {"_id": 1, "above_average_countries": 1, "total_reviews": 1, "positive_keywords": {"$arrayElemAt": ["$review_data.keywords.positive", 0]}, "negative_keywords": {"$arrayElemAt": ["$review_data.keywords.negative", 0]}, "sentiment_distribution": {"$arrayElemAt": ["$review_data.sentiment_distribution", 0]}}}])'),

    ("Get the average customer lifetime value for each user segment, considering all purchases and returns, and include the percentage of customers in each segment who have made a purchase in the last 30 days and their average sentiment score from product reviews", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$lookup": {"from": "returns", "localField": "_id", "foreignField": "user_id", "as": "returns"}}, {"$project": {"segment": 1, "total_spent": {"$sum": "$orders.total_amount"}, "total_returned": {"$sum": "$returns.refund_amount"}, "lifetime_value": {"$subtract": [{"$sum": "$orders.total_amount"}, {"$sum": "$returns.refund_amount"}]}, "recent_purchase": {"$gt": [{"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$gte": ["$$order.order_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}}}}}, 0]}, "user_id": "$_id"}}, {"$group": {"_id": "$segment", "avg_lifetime_value": {"$avg": "$lifetime_value"}, "total_customers": {"$sum": 1}, "recent_purchasers": {"$sum": {"$cond": ["$recent_purchase", 1, 0]}}, "user_ids": {"$push": "$user_id"}}}, {"$project": {"avg_lifetime_value": 1, "recent_purchase_percentage": {"$multiply": [{"$divide": ["$recent_purchasers", "$total_customers"]}, 100]}, "user_ids": 1}}, {"$lookup": {"from": "reviews", "let": {"user_ids": "$user_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$user_id", "$$user_ids"]}}}, {"$group": {"_id": null, "avg_sentiment": {"$avg": "$sentiment_score"}}}], "as": "review_data"}}, {"$project": {"avg_lifetime_value": 1, "recent_purchase_percentage": 1, "avg_sentiment_score": {"$arrayElemAt": ["$review_data.avg_sentiment", 0]}}}])'),

    ("Find all products that have had a price increase of more than 15% in the last year but have not seen a corresponding increase in sales, and include the top 3 competitor products that have gained market share in the same period and the sentiment analysis of recent customer reviews for both the product and its competitors", 
     'db.products.aggregate([{"$lookup": {"from": "price_history", "localField": "_id", "foreignField": "product_id", "as": "price_history"}}, {"$project": {"name": 1, "category": 1, "current_price": 1, "price_year_ago": {"$arrayElemAt": [{"$filter": {"input": "$price_history", "as": "ph", "cond": {"$gte": ["$$ph.date", new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)]}}}, 0]}}}, {"$match": {"$expr": {"$gt": [{"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, 15]}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"year": {"$year": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}}], "as": "sales_data"}}, {"$match": {"$expr": {"$lte": [{"$arrayElemAt": ["$sales_data.sales", -1]}, {"$arrayElemAt": ["$sales_data.sales", -2]}]}}}, {"$lookup": {"from": "market_share", "let": {"product_id": "$_id", "category": "$category"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$category", "$$category"]}, {"$ne": ["$product_id", "$$product_id"]}, {"$gt": ["$current_share", "$previous_share"]}]}}}, {"$sort": {"share_gain": -1}}, {"$limit": 3}], "as": "competitors"}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "avg_sentiment": {"$avg": "$sentiment_score"}, "review_count": {"$sum": 1}}}], "as": "product_sentiment"}}, {"$lookup": {"from": "reviews", "let": {"competitor_ids": "$competitors.product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$in": ["$product_id", "$$competitor_ids"]}, {"$gte": ["$review_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": "$product_id", "avg_sentiment": {"$avg": "$sentiment_score"}, "review_count": {"$sum": 1}}}], "as": "competitor_sentiment"}}, {"$project": {"name": 1, "category": 1, "price_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, "competitors": 1, "product_sentiment": {"$arrayElemAt": ["$product_sentiment", 0]}, "competitor_sentiment": 1}}])'),

    ("Get the average time between user registration and first purchase for each acquisition channel, considering only users who made their first purchase within 30 days of registration, and include the average order value of the first purchase and the retention rate after 3 months", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"acquisition_channel": 1, "registration_date": 1, "first_purchase": {"$arrayElemAt": [{"$filter": {"input": "$orders", "as": "order", "cond": {"$eq": ["$$order.order_date", {"$min": "$orders.order_date"}]}}}, 0]}, "orders": 1}}, {"$project": {"acquisition_channel": 1, "days_to_purchase": {"$divide": [{"$subtract": ["$first_purchase.order_date", "$registration_date"]}, 24 * 60 * 60 * 1000]}, "first_purchase_value": "$first_purchase.total_amount", "has_second_purchase": {"$gt": [{"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$and": [{"$ne": ["$$order._id", "$first_purchase._id"]}, {"$lte": [{"$subtract": ["$$order.order_date", "$first_purchase.order_date"]}, 90 * 24 * 60 * 60 * 1000]}]}}}}, 0]}}}, {"$match": {"days_to_purchase": {"$lte": 30}}}, {"$group": {"_id": "$acquisition_channel", "avg_days_to_purchase": {"$avg": "$days_to_purchase"}, "avg_first_purchase_value": {"$avg": "$first_purchase_value"}, "total_users": {"$sum": 1}, "retained_users": {"$sum": {"$cond": ["$has_second_purchase", 1, 0]}}}}, {"$project": {"avg_days_to_purchase": 1, "avg_first_purchase_value": 1, "retention_rate": {"$multiply": [{"$divide": ["$retained_users", "$total_users"]}, 100]}}}}])'),

    ("Find all blog posts that mention a specific keyword in either the title or content, have at least 10 comments, an average rating of 4 or higher, and include the top 5 related products based on user engagement after viewing the blog post and the conversion rate for each product", 
     'db.blog_posts.aggregate([{"$match": {"$or": [{"title": /keyword/i}, {"content": /keyword/i}], "comment_count": {"$gte": 10}}}, {"$lookup": {"from": "post_ratings", "localField": "_id", "foreignField": "post_id", "as": "ratings"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": {"$avg": "$ratings.rating"}}}, {"$match": {"avg_rating": {"$gte": 4}}}, {"$lookup": {"from": "user_activity", "let": {"post_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$viewed_post", "$$post_id"]}}}, {"$lookup": {"from": "product_views", "let": {"user_id": "$user_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gt": ["$view_date", "$activity_date"]}]}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}], "as": "related_product_views"}}, {"$unwind": "$related_product_views"}, {"$group": {"_id": "$related_product_views._id", "total_views": {"$sum": "$related_product_views.view_count"}}}, {"$sort": {"total_views": -1}}, {"$limit": 5}], "as": "related_products"}}, {"$lookup": {"from": "orders", "let": {"related_products": "$related_products._id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$items.product_id", "$$related_products"]}}}, {"$unwind": "$items"}, {"$match": {"$expr": {"$in": ["$items.product_id", "$$related_products"]}}}, {"$group": {"_id": "$items.product_id", "purchase_count": {"$sum": 1}}}], "as": "product_purchases"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": 1, "related_products": {"$map": {"input": "$related_products", "as": "product", "in": {"product_id": "$$product._id", "views": "$$product.total_views", "purchases": {"$arrayElemAt": [{"$filter": {"input": "$product_purchases", "as": "purchase", "cond": {"$eq": ["$$purchase._id", "$$product._id"]}}}, 0]}, "conversion_rate": {"$multiply": [{"$divide": [{"$arrayElemAt": [{"$filter": {"input": "$product_purchases", "as": "purchase", "cond": {"$eq": ["$$purchase._id", "$$product._id"]}}}, 0]}, "$$product.total_views"]}, 100]}}}}}}])'),

    ("Get the top 5 most common words used in product reviews for each product category, excluding common stop words, and include the sentiment score associated with each word and the trend of word usage over the last 6 months", 
     'db.reviews.aggregate([{"$match": {"review_date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"category": "$product.category", "words": {"$split": ["$text", " "]}, "sentiment_score": 1, "review_date": 1}}, {"$unwind": "$words"}, {"$match": {"words": {"$nin": ["the", "a", "an", "and", "or", "but", "in", "on", "at", "to", "for", "of", "with", "by"]}}}, {"$group": {"_id": {"category": "$category", "word": "$words", "month": {"$month": "$review_date"}}, "count": {"$sum": 1}, "total_sentiment": {"$sum": "$sentiment_score"}}}, {"$group": {"_id": {"category": "$_id.category", "word": "$_id.word"}, "monthly_counts": {"$push": {"month": "$_id.month", "count": "$count"}}, "total_count": {"$sum": "$count"}, "avg_sentiment": {"$avg": "$total_sentiment"}}}, {"$sort": {"total_count": -1}}, {"$group": {"_id": "$_id.category", "words": {"$push": {"word": "$_id.word", "total_count": "$total_count", "avg_sentiment": "$avg_sentiment", "monthly_counts": "$monthly_counts"}}}}, {"$project": {"category": "$_id", "top_words": {"$slice": ["$words", 5]}}}, {"$unwind": "$top_words"}, {"$project": {"category": 1, "word": "$top_words.word", "total_count": "$top_words.total_count", "avg_sentiment": "$top_words.avg_sentiment", "trend": {"$map": {"input": {"$range": [1, 7]}, "as": "month", "in": {"month": "$$month", "count": {"$ifNull": [{"$arrayElemAt": [{"$filter": {"input": "$top_words.monthly_counts", "as": "mc", "cond": {"$eq": ["$$mc.month", "$$month"]}}}, 0]}, {"count": 0}]}}}}}}, {"$group": {"_id": "$category", "words": {"$push": {"word": "$word", "total_count": "$total_count", "avg_sentiment": "$avg_sentiment", "trend": "$trend"}}}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $150 in the last 30 days and have opened but not clicked on a cart abandonment email, and include their browsing history for the past week and product recommendations based on their past purchases", 
     'db.users.aggregate([{"$match": {"cart.last_updated": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 150}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}, {"$lookup": {"from": "browsing_history", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$timestamp", new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)]}]}}}, {"$sort": {"timestamp": -1}}], "as": "recent_browsing_history"}}, {"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$user_id", "$$user_id"]}}}, {"$unwind": "$items"}, {"$group": {"_id": "$items.category", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_categories"}}, {"$lookup": {"from": "product_recommendations", "let": {"categories": "$top_categories._id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$category", "$$categories"]}}}, {"$sort": {"recommendation_score": -1}}, {"$limit": 5}], "as": "recommended_products"}}, {"$project": {"_id": 1, "cart_total": 1, "recent_browsing_history": 1, "top_categories": 1, "recommended_products": 1}}])'),

    ("Get the average order value for each user segment, broken down by device type and day of the week, and include the percentage of orders that were made using a promotional code and the average discount amount", 
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type", "day_of_week": {"$dayOfWeek": "$order_date"}}, "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$total_amount"}, "promo_orders": {"$sum": {"$cond": [{"$ne": ["$promo_code", null]}, 1, 0]}}, "total_discount": {"$sum": {"$ifNull": ["$discount_amount", 0]}}}}, {"$project": {"_id": 1, "avg_order_value": {"$divide": ["$total_amount", "$total_orders"]}, "promo_percentage": {"$multiply": [{"$divide": ["$promo_orders", "$total_orders"]}, 100]}, "avg_discount": {"$cond": [{"$eq": ["$promo_orders", 0]}, 0, {"$divide": ["$total_discount", "$promo_orders"]}]}}}])'),

    ("Find all products that have been consistently rated above average for the past 6 months, have at least 50 reviews, and have shown a month-over-month increase in sales volume, and include the top 3 customer segments purchasing these products and their average customer lifetime value", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "month": {"$month": "$date"}}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "monthly_ratings": {"$push": {"month": "$_id.month", "avg_rating": "$avg_rating", "review_count": "$review_count"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$match": {"total_reviews": {"$gte": 50}}}, {"$project": {"monthly_ratings": 1, "overall_avg": 1, "above_average_months": {"$size": {"$filter": {"input": "$monthly_ratings", "as": "mr", "cond": {"$gt": ["$$mr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_months": 6}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"month": {"$month": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}, {"$group": {"_id": "$month", "total_sales": {"$sum": "$sales"}}}, {"$sort": {"_id": 1}}], "as": "monthly_sales"}}, {"$project": {"_id": 1, "monthly_ratings": 1, "overall_avg": 1, "above_average_months": 1, "sales_increase": {"$reduce": {"input": {"$range": [1, {"$size": "$monthly_sales"}]}, "initialValue": true, "in": {"$and": ["$$value", {"$gt": [{"$arrayElemAt": ["$monthly_sales.total_sales", "$$this"]}, {"$arrayElemAt": ["$monthly_sales.total_sales", {"$subtract": ["$$this", 1]}]}]}]}}}}}, {"$match": {"sales_increase": true}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "order_count": {"$sum": 1}, "user_ids": {"$addToSet": "$user_id"}}}, {"$sort": {"order_count": -1}}, {"$limit": 3}], "as": "top_customer_segments"}}, {"$lookup": {"from": "users", "let": {"user_ids": {"$reduce": {"input": "$top_customer_segments", "initialValue": [], "in": {"$concatArrays": ["$$value", "$$this.user_ids"]}}}}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$user_ids"]}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$project": {"lifetime_value": {"$sum": "$orders.total_amount"}}}, {"$group": {"_id": null, "avg_lifetime_value": {"$avg": "$lifetime_value"}}}], "as": "customer_lifetime_value"}}, {"$project": {"_id": 1, "monthly_ratings": 1, "overall_avg": 1, "above_average_months": 1, "top_customer_segments": {"$map": {"input": "$top_customer_segments", "as": "segment", "in": {"segment": "$$segment._id", "order_count": "$$segment.order_count"}}}, "avg_customer_lifetime_value": {"$arrayElemAt": ["$customer_lifetime_value.avg_lifetime_value", 0]}}}])'),

    ("Get the total number of support tickets opened and resolved for each product, sorted by resolution rate, considering only tickets from the last 90 days, and include the average customer satisfaction score for resolved tickets and the top 3 most common issues reported", 
     'db.support_tickets.aggregate([{"$match": {"created_date": {"$gte": new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": "$product_id", "opened": {"$sum": 1}, "resolved": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, 1, 0]}}, "total_satisfaction": {"$sum": {"$cond": [{"$eq": ["$status", "resolved"]}, "$satisfaction_score", 0]}}, "issues": {"$push": "$issue_type"}}}, {"$project": {"product_id": "$_id", "opened": 1, "resolved": 1, "resolution_rate": {"$divide": ["$resolved", "$opened"]}, "avg_satisfaction": {"$cond": [{"$eq": ["$resolved", 0]}, null, {"$divide": ["$total_satisfaction", "$resolved"]}]}, "issues": 1}}, {"$project": {"product_id": 1, "opened": 1, "resolved": 1, "resolution_rate": 1, "avg_satisfaction": 1, "top_issues": {"$slice": [{"$map": {"input": {"$sortArray": {"input": {"$objectToArray": {"$arrayToObject": {"$map": {"input": "$issues", "as": "issue", "in": {"k": "$$issue", "v": {"$add": [{"$indexOfArray": ["$issues", "$$issue"]}, 1]}}}}}}, "sortBy": {"v": -1}}}, "as": "issue", "in": "$$issue.k"}}, 3]}}}, {"$sort": {"resolution_rate": -1}}])'),

    ("Find all users who have made purchases on consecutive days and have a total spend of over $1000 in the last 30 days, and include their most frequently purchased product category, average order value, and the percentage of their purchases made during flash sales or promotional events", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"user_id": "$user_id", "date": {"$dateToString": {"format": "%Y-%m-%d", "date": "$order_date"}}}, "daily_total": {"$sum": "$total_amount"}, "daily_orders": {"$push": "$$ROOT"}}}, {"$sort": {"_id.user_id": 1, "_id.date": 1}}, {"$group": {"_id": "$_id.user_id", "purchase_days": {"$push": "$_id.date"}, "total_spend": {"$sum": "$daily_total"}, "all_orders": {"$push": "$daily_orders"}}}, {"$project": {"_id": 1, "total_spend": 1, "consecutive_days": {"$reduce": {"input": {"$range": [1, {"$size": "$purchase_days"}]}, "initialValue": false, "in": {"$or": ["$$value", {"$eq": [{"$subtract": [{"$toDate": {"$arrayElemAt": ["$purchase_days", "$$this"]}}, {"$toDate": {"$arrayElemAt": ["$purchase_days", {"$subtract": ["$$this", 1]}]}}]}, 86400000]}]}}}, "all_orders": 1}}, {"$match": {"consecutive_days": true, "total_spend": {"$gt": 1000}}}, {"$unwind": "$all_orders"}, {"$unwind": "$all_orders"}, {"$group": {"_id": {"user_id": "$_id", "category": "$all_orders.items.category"}, "category_count": {"$sum": 1}, "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$all_orders.total_amount"}, "promo_orders": {"$sum": {"$cond": [{"$or": ["$all_orders.is_flash_sale", {"$ne": ["$all_orders.promo_code", null]}]}, 1, 0]}}}}, {"$sort": {"category_count": -1}}, {"$group": {"_id": "$_id.user_id", "top_category": {"$first": "$_id.category"}, "avg_order_value": {"$avg": {"$divide": ["$total_amount", "$total_orders"]}}, "total_orders": {"$sum": "$total_orders"}, "promo_orders": {"$sum": "$promo_orders"}}}, {"$project": {"_id": 1, "top_category": 1, "avg_order_value": 1, "promo_percentage": {"$multiply": [{"$divide": ["$promo_orders", "$total_orders"]}, 100]}}}])'),

    ("Get the average customer satisfaction score for each support agent, considering only resolved tickets in the last 60 days, and include the agent's department, the percentage of tickets resolved within the SLA time frame, and the average number of interactions per ticket", 
     'db.support_tickets.aggregate([{"$match": {"status": "resolved", "resolution_date": {"$gte": new Date(Date.now() - 60 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "support_agents", "localField": "agent_id", "foreignField": "_id", "as": "agent"}}, {"$unwind": "$agent"}, {"$project": {"agent_id": 1, "department": "$agent.department", "satisfaction_score": 1, "within_sla": {"$lte": ["$resolution_time", "$sla_time"]}, "interaction_count": {"$size": "$interactions"}}}, {"$group": {"_id": {"agent_id": "$agent_id", "department": "$department"}, "avg_satisfaction": {"$avg": "$satisfaction_score"}, "total_tickets": {"$sum": 1}, "within_sla_count": {"$sum": {"$cond": ["$within_sla", 1, 0]}}, "total_interactions": {"$sum": "$interaction_count"}}}, {"$project": {"agent_id": "$_id.agent_id", "department": "$_id.department", "avg_satisfaction": 1, "sla_percentage": {"$multiply": [{"$divide": ["$within_sla_count", "$total_tickets"]}, 100]}, "avg_interactions_per_ticket": {"$divide": ["$total_interactions", "$total_tickets"]}}}, {"$sort": {"avg_satisfaction": -1}}])'),

    ("Find all products that have been frequently bought together in the same order (appearing together in at least 5% of orders) and have a combined average rating of 4.5 or higher, and include the top 3 customer segments purchasing these product combinations and the average time between purchases for repeat customers", 
     'db.orders.aggregate([{"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "count": {"$sum": 1}, "order_ids": {"$addToSet": "$_id"}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": "$$ROOT"}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$lookup": {"from": "products", "localField": "combinations._id.p1", "foreignField": "_id", "as": "product1"}}, {"$lookup": {"from": "products", "localField": "combinations._id.p2", "foreignField": "_id", "as": "product2"}}, {"$project": {"products": ["$product1", "$product2"], "combined_rating": {"$avg": ["$product1.avg_rating", "$product2.avg_rating"]}, "count": "$combinations.count", "order_ids": "$combinations.order_ids"}}, {"$match": {"combined_rating": {"$gte": 4.5}}}, {"$lookup": {"from": "orders", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$order_ids"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "count": {"$sum": 1}, "user_ids": {"$addToSet": "$user_id"}}}], "as": "customer_segments"}}, {"$project": {"products": 1, "combined_rating": 1, "count": 1, "top_segments": {"$slice": [{"$sortArray": {"input": "$customer_segments", "sortBy": {"count": -1}}}, 3]}}}, {"$lookup": {"from": "orders", "let": {"user_ids": {"$reduce": {"input": "$top_segments", "initialValue": [], "in": {"$concatArrays": ["$$value", "$$this.user_ids"]}}}}, "pipeline": [{"$match": {"$expr": {"$in": ["$user_id", "$$user_ids"]}}}, {"$sort": {"user_id": 1, "order_date": 1}}, {"$group": {"_id": "$user_id", "purchase_dates": {"$push": "$order_date"}}}, {"$project": {"time_between_purchases": {"$avg": {"$map": {"input": {"$range": [1, {"$size": "$purchase_dates"}]}, "as": "i", "in": {"$subtract": [{"$arrayElemAt": ["$purchase_dates", "$$i"]}, {"$arrayElemAt": ["$purchase_dates", {"$subtract": ["$$i", 1]}]}]}}}}}}, {"$group": {"_id": null, "avg_time_between_purchases": {"$avg": "$time_between_purchases"}}}], "as": "repeat_purchase_data"}}, {"$project": {"products": 1, "combined_rating": 1, "count": 1, "top_segments": 1, "avg_time_between_purchases": {"$arrayElemAt": ["$repeat_purchase_data.avg_time_between_purchases", 0]}}}])'),

    ("Find all users who have left a review for every product they've purchased in the last 6 months, have an average review rating higher than the overall average, and include their most frequently purchased product category, their average order value, and the sentiment analysis of their reviews compared to the product's overall sentiment", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$order_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$unwind": "$items"}, {"$group": {"_id": null, "products": {"$addToSet": "$items.product_id"}, "total_spent": {"$sum": {"$multiply": ["$items.price", "$items.quantity"]}}, "order_count": {"$sum": 1}, "categories": {"$push": "$items.category"}}}], "as": "purchased_products"}}, {"$lookup": {"from": "reviews", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)]}]}}}, {"$group": {"_id": null, "products": {"$addToSet": "$product_id"}, "avg_rating": {"$avg": "$rating"}, "review_ids": {"$push": "$_id"}}}], "as": "reviewed_products"}}, {"$project": {"_id": 1, "purchased_products": {"$arrayElemAt": ["$purchased_products.products", 0]}, "reviewed_products": {"$arrayElemAt": ["$reviewed_products.products", 0]}, "user_avg_rating": {"$arrayElemAt": ["$reviewed_products.avg_rating", 0]}, "total_spent": {"$arrayElemAt": ["$purchased_products.total_spent", 0]}, "order_count": {"$arrayElemAt": ["$purchased_products.order_count", 0]}, "categories": {"$arrayElemAt": ["$purchased_products.categories", 0]}, "review_ids": {"$arrayElemAt": ["$reviewed_products.review_ids", 0]}}}, {"$match": {"$expr": {"$and": [{"$gt": [{"$size": "$purchased_products"}, 0]}, {"$eq": [{"$size": {"$setDifference": ["$purchased_products", "$reviewed_products"]}}, 0]}]}}}, {"$lookup": {"from": "reviews", "pipeline": [{"$group": {"_id": null, "overall_avg_rating": {"$avg": "$rating"}}}], "as": "overall_rating"}}, {"$match": {"$expr": {"$gt": ["$user_avg_rating", {"$arrayElemAt": ["$overall_rating.overall_avg_rating", 0]}]}}}, {"$project": {"_id": 1, "user_avg_rating": 1, "avg_order_value": {"$divide": ["$total_spent", "$order_count"]}, "most_frequent_category": {"$arrayElemAt": [{"$sortArray": {"input": {"$map": {"input": {"$setUnion": "$categories"}, "as": "category", "in": {"category": "$$category", "count": {"$size": {"$filter": {"input": "$categories", "as": "c", "cond": {"$eq": ["$$c", "$$category"]}}}}}}}, "sortBy": {"count": -1}}}, 0]}, "review_ids": 1}}, {"$lookup": {"from": "sentiment_analysis", "localField": "review_ids", "foreignField": "review_id", "as": "user_sentiments"}}, {"$project": {"_id": 1, "user_avg_rating": 1, "avg_order_value": 1, "most_frequent_category": "$most_frequent_category.category", "avg_user_sentiment": {"$avg": "$user_sentiments.sentiment_score"}}}, {"$lookup": {"from": "products", "let": {"category": "$most_frequent_category"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$category", "$$category"]}}}, {"$lookup": {"from": "reviews", "localField": "_id", "foreignField": "product_id", "as": "product_reviews"}}, {"$lookup": {"from": "sentiment_analysis", "localField": "product_reviews._id", "foreignField": "review_id", "as": "product_sentiments"}}, {"$project": {"avg_product_sentiment": {"$avg": "$product_sentiments.sentiment_score"}}}], "as": "category_sentiment"}}, {"$project": {"_id": 1, "user_avg_rating": 1, "avg_order_value": 1, "most_frequent_category": 1, "avg_user_sentiment": 1, "avg_category_sentiment": {"$avg": "$category_sentiment.avg_product_sentiment"}, "sentiment_difference": {"$subtract": ["$avg_user_sentiment", {"$avg": "$category_sentiment.avg_product_sentiment"}]}}}])'),

    ("Get the most common product combinations in orders, considering only combinations that appear in at least 5% of all orders in the last 3 months, and include the average order value for orders containing each combination, the top 3 customer segments purchasing these product combinations, and the most effective marketing channel for each combination", 
     'db.orders.aggregate([{"$match": {"order_date": {"$gte": new Date(Date(Date.now() - 90 * 24 * 60 * 60 * 1000)}}}, {"$unwind": "$items"}, {"$unwind": "$items"}, {"$group": {"_id": {"order_id": "$_id", "p1": {"$min": ["$items.product_id", "$$ROOT.items.product_id"]}, "p2": {"$max": ["$items.product_id", "$$ROOT.items.product_id"]}}, "order_total": {"$first": "$total_amount"}}}, {"$group": {"_id": {"p1": "$_id.p1", "p2": "$_id.p2"}, "count": {"$sum": 1}, "total_order_value": {"$sum": "$order_total"}, "order_ids": {"$push": "$_id.order_id"}}}, {"$match": {"_id.p1": {"$ne": "$_id.p2"}}}, {"$group": {"_id": null, "total_orders": {"$sum": "$count"}, "combinations": {"$push": "$$ROOT"}}}, {"$project": {"combinations": {"$filter": {"input": "$combinations", "as": "combo", "cond": {"$gte": [{"$divide": ["$$combo.count", "$total_orders"]}, 0.05]}}}}}, {"$unwind": "$combinations"}, {"$project": {"products": "$combinations._id", "count": "$combinations.count", "avg_order_value": {"$divide": ["$combinations.total_order_value", "$combinations.count"]}, "order_ids": "$combinations.order_ids"}}, {"$lookup": {"from": "orders", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$order_ids"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_customer_segments"}}, {"$lookup": {"from": "marketing_attribution", "let": {"order_ids": "$order_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$order_id", "$$order_ids"]}}}, {"$group": {"_id": "$channel", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 1}], "as": "top_marketing_channel"}}, {"$project": {"products": 1, "count": 1, "avg_order_value": 1, "top_customer_segments": 1, "most_effective_channel": {"$arrayElemAt": ["$top_marketing_channel._id", 0]}}}, {"$sort": {"count": -1}}])'),

    ("Find all products that have had a price increase of more than 15% in the last year but have not seen a corresponding increase in sales, and include the top 3 competitor products that have gained market share in the same period, the sentiment analysis of recent customer reviews for both the product and its competitors, and the change in average customer lifetime value for customers who have purchased these products", 
     'db.products.aggregate([{"$lookup": {"from": "price_history", "localField": "_id", "foreignField": "product_id", "as": "price_history"}}, {"$project": {"name": 1, "category": 1, "current_price": 1, "price_year_ago": {"$arrayElemAt": [{"$filter": {"input": "$price_history", "as": "ph", "cond": {"$gte": ["$$ph.date", new Date(Date.now() - 365 * 24 * 60 * 60 * 1000)]}}}, 0]}}}, {"$match": {"$expr": {"$gt": [{"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, 15]}}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"year": {"$year": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}, {"$group": {"_id": "$year", "total_sales": {"$sum": "$sales"}}}], "as": "sales_data"}}, {"$match": {"$expr": {"$lte": [{"$arrayElemAt": ["$sales_data.total_sales", -1]}, {"$arrayElemAt": ["$sales_data.total_sales", -2]}]}}}, {"$lookup": {"from": "market_share", "let": {"product_id": "$_id", "category": "$category"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$category", "$$category"]}, {"$ne": ["$product_id", "$$product_id"]}, {"$gt": ["$current_share", "$previous_share"]}]}}}, {"$sort": {"share_gain": -1}}, {"$limit": 3}], "as": "competitors"}}, {"$lookup": {"from": "reviews", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$product_id", "$$product_id"]}, {"$gte": ["$review_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$lookup": {"from": "sentiment_analysis", "localField": "_id", "foreignField": "review_id", "as": "sentiment"}}, {"$group": {"_id": null, "avg_sentiment": {"$avg": "$sentiment.score"}, "review_count": {"$sum": 1}}}], "as": "product_sentiment"}}, {"$lookup": {"from": "reviews", "let": {"competitor_ids": "$competitors.product_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$in": ["$product_id", "$$competitor_ids"]}, {"$gte": ["$review_date", new Date(Date.now() - 90 * 24 * 60 * 60 * 1000)]}]}}}, {"$lookup": {"from": "sentiment_analysis", "localField": "_id", "foreignField": "review_id", "as": "sentiment"}}, {"$group": {"_id": "$product_id", "avg_sentiment": {"$avg": "$sentiment.score"}, "review_count": {"$sum": 1}}}], "as": "competitor_sentiment"}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user._id", "first_purchase_date": {"$min": "$order_date"}, "last_purchase_date": {"$max": "$order_date"}, "total_spent": {"$sum": "$total_amount"}}}, {"$project": {"customer_lifetime": {"$divide": [{"$subtract": ["$last_purchase_date", "$first_purchase_date"]}, 24 * 60 * 60 * 1000]}, "customer_value": {"$divide": ["$total_spent", {"$add": [{"$divide": [{"$subtract": ["$last_purchase_date", "$first_purchase_date"]}, 365 * 24 * 60 * 60 * 1000]}, 1]}]}}}, {"$group": {"_id": null, "avg_customer_lifetime": {"$avg": "$customer_lifetime"}, "avg_customer_value": {"$avg": "$customer_value"}}}], "as": "customer_lifetime_value"}}, {"$project": {"name": 1, "category": 1, "price_increase_percentage": {"$multiply": [{"$divide": [{"$subtract": ["$current_price", "$price_year_ago.price"]}, "$price_year_ago.price"]}, 100]}, "competitors": 1, "product_sentiment": {"$arrayElemAt": ["$product_sentiment", 0]}, "competitor_sentiment": 1, "avg_customer_lifetime": {"$arrayElemAt": ["$customer_lifetime_value.avg_customer_lifetime", 0]}, "avg_customer_value": {"$arrayElemAt": ["$customer_lifetime_value.avg_customer_value", 0]}}}])'),

    ("Get the average time between user registration and first purchase for each acquisition channel, considering only users who made their first purchase within 30 days of registration, and include the average order value of the first purchase, the retention rate after 3 months, and the most common product category for the first purchase", 
     'db.users.aggregate([{"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "orders"}}, {"$match": {"orders": {"$ne": []}}}, {"$project": {"acquisition_channel": 1, "registration_date": 1, "first_purchase": {"$arrayElemAt": [{"$filter": {"input": "$orders", "as": "order", "cond": {"$eq": ["$$order.order_date", {"$min": "$orders.order_date"}]}}}, 0]}, "orders": 1}}, {"$project": {"acquisition_channel": 1, "days_to_purchase": {"$divide": [{"$subtract": ["$first_purchase.order_date", "$registration_date"]}, 24 * 60 * 60 * 1000]}, "first_purchase_value": "$first_purchase.total_amount", "first_purchase_category": {"$arrayElemAt": ["$first_purchase.items.category", 0]}, "has_second_purchase": {"$gt": [{"$size": {"$filter": {"input": "$orders", "as": "order", "cond": {"$and": [{"$ne": ["$$order._id", "$first_purchase._id"]}, {"$lte": [{"$subtract": ["$$order.order_date", "$first_purchase.order_date"]}, 90 * 24 * 60 * 60 * 1000]}]}}}}, 0]}}}, {"$match": {"days_to_purchase": {"$lte": 30}}}, {"$group": {"_id": "$acquisition_channel", "avg_days_to_purchase": {"$avg": "$days_to_purchase"}, "avg_first_purchase_value": {"$avg": "$first_purchase_value"}, "total_users": {"$sum": 1}, "retained_users": {"$sum": {"$cond": ["$has_second_purchase", 1, 0]}}, "first_purchase_categories": {"$push": "$first_purchase_category"}}}, {"$project": {"avg_days_to_purchase": 1, "avg_first_purchase_value": 1, "retention_rate": {"$multiply": [{"$divide": ["$retained_users", "$total_users"]}, 100]}, "most_common_first_category": {"$arrayElemAt": [{"$sortArray": {"input": {"$map": {"input": {"$setUnion": "$first_purchase_categories"}, "as": "category", "in": {"category": "$$category", "count": {"$size": {"$filter": {"input": "$first_purchase_categories", "as": "c", "cond": {"$eq": ["$$c", "$$category"]}}}}}}}, "sortBy": {"count": -1}}}, 0]}}}, {"$project": {"avg_days_to_purchase": 1, "avg_first_purchase_value": 1, "retention_rate": 1, "most_common_first_category": "$most_common_first_category.category"}}, {"$sort": {"avg_days_to_purchase": 1}}])'),

    ("Find all blog posts that mention a specific keyword in either the title or content, have at least 10 comments, an average rating of 4 or higher, and include the top 5 related products based on user engagement after viewing the blog post, the conversion rate for each product, and the average sentiment score of comments for each blog post", 
     'db.blog_posts.aggregate([{"$match": {"$or": [{"title": /keyword/i}, {"content": /keyword/i}], "comment_count": {"$gte": 10}}}, {"$lookup": {"from": "post_ratings", "localField": "_id", "foreignField": "post_id", "as": "ratings"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": {"$avg": "$ratings.rating"}}}, {"$match": {"avg_rating": {"$gte": 4}}}, {"$lookup": {"from": "user_activity", "let": {"post_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$viewed_post", "$$post_id"]}}}, {"$lookup": {"from": "product_views", "let": {"user_id": "$user_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gt": ["$view_date", "$activity_date"]}]}}}, {"$group": {"_id": "$product_id", "view_count": {"$sum": 1}}}], "as": "related_product_views"}}, {"$unwind": "$related_product_views"}, {"$group": {"_id": "$related_product_views._id", "total_views": {"$sum": "$related_product_views.view_count"}}}, {"$sort": {"total_views": -1}}, {"$limit": 5}], "as": "related_products"}}, {"$lookup": {"from": "orders", "let": {"related_products": "$related_products._id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$items.product_id", "$$related_products"]}}}, {"$unwind": "$items"}, {"$match": {"$expr": {"$in": ["$items.product_id", "$$related_products"]}}}, {"$group": {"_id": "$items.product_id", "purchase_count": {"$sum": 1}}}], "as": "product_purchases"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": 1, "related_products": {"$map": {"input": "$related_products", "as": "product", "in": {"product_id": "$$product._id", "views": "$$product.total_views", "purchases": {"$arrayElemAt": [{"$filter": {"input": "$product_purchases", "as": "purchase", "cond": {"$eq": ["$$purchase._id", "$$product._id"]}}}, 0]}, "conversion_rate": {"$multiply": [{"$divide": [{"$arrayElemAt": [{"$filter": {"input": "$product_purchases", "as": "purchase", "cond": {"$eq": ["$$purchase._id", "$$product._id"]}}}, 0]}, "$$product.total_views"]}, 100]}}}}}, {"$lookup": {"from": "comments", "localField": "_id", "foreignField": "post_id", "as": "comments"}}, {"$lookup": {"from": "sentiment_analysis", "localField": "comments._id", "foreignField": "comment_id", "as": "comment_sentiments"}}, {"$project": {"title": 1, "content": 1, "comment_count": 1, "avg_rating": 1, "related_products": 1, "avg_comment_sentiment": {"$avg": "$comment_sentiments.sentiment_score"}}}])'),

    ("Get the top 5 most common words used in product reviews for each product category, excluding common stop words, and include the sentiment score associated with each word, the trend of word usage over the last 6 months, and the correlation between the word's usage and the product's sales performance", 
     'db.reviews.aggregate([{"$match": {"review_date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$lookup": {"from": "products", "localField": "product_id", "foreignField": "_id", "as": "product"}}, {"$unwind": "$product"}, {"$project": {"category": "$product.category", "words": {"$split": ["$text", " "]}, "sentiment_score": 1, "review_date": 1, "product_id": 1}}, {"$unwind": "$words"}, {"$match": {"words": {"$nin": ["the", "a", "an", "and", "or", "but", "in", "on", "at", "to", "for", "of", "with", "by"]}}}, {"$group": {"_id": {"category": "$category", "word": "$words", "month": {"$month": "$review_date"}}, "count": {"$sum": 1}, "total_sentiment": {"$sum": "$sentiment_score"}, "product_ids": {"$addToSet": "$product_id"}}}, {"$group": {"_id": {"category": "$_id.category", "word": "$_id.word"}, "monthly_counts": {"$push": {"month": "$_id.month", "count": "$count"}}, "total_count": {"$sum": "$count"}, "avg_sentiment": {"$avg": "$total_sentiment"}, "product_ids": {"$first": "$product_ids"}}}, {"$sort": {"total_count": -1}}, {"$group": {"_id": "$_id.category", "words": {"$push": {"word": "$_id.word", "total_count": "$total_count", "avg_sentiment": "$avg_sentiment", "monthly_counts": "$monthly_counts", "product_ids": "$product_ids"}}}}, {"$project": {"category": "$_id", "top_words": {"$slice": ["$words", 5]}}}, {"$unwind": "$top_words"}, {"$project": {"category": 1, "word": "$top_words.word", "total_count": "$top_words.total_count", "avg_sentiment": "$top_words.avg_sentiment", "trend": {"$map": {"input": {"$range": [1, 7]}, "as": "month", "in": {"month": "$$month", "count": {"$ifNull": [{"$arrayElemAt": [{"$filter": {"input": "$top_words.monthly_counts", "as": "mc", "cond": {"$eq": ["$$mc.month", "$$month"]}}}, 0]}, {"count": 0}]}}}}, "product_ids": "$top_words.product_ids"}}, {"$lookup": {"from": "orders", "let": {"product_ids": "$product_ids"}, "pipeline": [{"$match": {"$expr": {"$in": ["$items.product_id", "$$product_ids"]}}}, {"$unwind": "$items"}, {"$match": {"$expr": {"$in": ["$items.product_id", "$$product_ids"]}}}, {"$group": {"_id": {"product_id": "$items.product_id", "month": {"$month": "$order_date"}}, "sales": {"$sum": "$items.quantity"}}}, {"$group": {"_id": "$_id.month", "total_sales": {"$sum": "$sales"}}}], "as": "sales_data"}}, {"$project": {"category": 1, "word": 1, "total_count": 1, "avg_sentiment": 1, "trend": 1, "sales_correlation": {"$corr": {"x": "$trend.count", "y": {"$map": {"input": "$sales_data", "as": "sd", "in": "$$sd.total_sales"}}}}}}, {"$group": {"_id": "$category", "words": {"$push": {"word": "$word", "total_count": "$total_count", "avg_sentiment": "$avg_sentiment", "trend": "$trend", "sales_correlation": "$sales_correlation"}}}}, {"$project": {"category": "$_id", "words": 1}}, {"$sort": {"category": 1}}])'),

    ("Find all users who have abandoned their shopping cart with a total value over $150 in the last 30 days and have opened but not clicked on a cart abandonment email, and include their browsing history for the past week, product recommendations based on their past purchases, and the estimated probability of conversion if offered a 10% discount", 
     'db.users.aggregate([{"$match": {"cart.last_updated": {"$gte": new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)}}}, {"$project": {"_id": 1, "cart_total": {"$sum": {"$map": {"input": "$cart.items", "as": "item", "in": {"$multiply": ["$$item.price", "$$item.quantity"]}}}}}}, {"$match": {"cart_total": {"$gt": 150}}}, {"$lookup": {"from": "emails", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$type", "cart_abandonment"]}, {"$gte": ["$sent_date", new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)]}, {"$eq": ["$opened", true]}, {"$eq": ["$clicked", false]}]}}}], "as": "abandonment_emails"}}, {"$match": {"abandonment_emails": {"$ne": []}}}, {"$lookup": {"from": "browsing_history", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$gte": ["$timestamp", new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)]}]}}}, {"$sort": {"timestamp": -1}}], "as": "recent_browsing_history"}}, {"$lookup": {"from": "orders", "let": {"user_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$eq": ["$user_id", "$$user_id"]}}}, {"$unwind": "$items"}, {"$group": {"_id": "$items.category", "count": {"$sum": 1}}}, {"$sort": {"count": -1}}, {"$limit": 3}], "as": "top_categories"}}, {"$lookup": {"from": "product_recommendations", "let": {"categories": "$top_categories._id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$category", "$$categories"]}}}, {"$sort": {"recommendation_score": -1}}, {"$limit": 5}], "as": "recommended_products"}}, {"$lookup": {"from": "conversion_model", "let": {"user_id": "$_id", "cart_total": "$cart_total"}, "pipeline": [{"$match": {"$expr": {"$and": [{"$eq": ["$user_id", "$$user_id"]}, {"$eq": ["$discount_percentage", 10]}]}}}, {"$project": {"conversion_probability": {"$multiply": ["$base_probability", {"$add": [1, {"$multiply": [0.1, {"$divide": ["$$cart_total", 100]}]}]}]}}}], "as": "conversion_probability"}}, {"$project": {"_id": 1, "cart_total": 1, "recent_browsing_history": 1, "top_categories": 1, "recommended_products": 1, "estimated_conversion_probability": {"$arrayElemAt": ["$conversion_probability.conversion_probability", 0]}}}])'),

    ("Get the average order value for each user segment, broken down by device type and day of the week, and include the percentage of orders that were made using a promotional code, the average discount amount, and the most common product category for each segment-device-day combination", 
     'db.orders.aggregate([{"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": {"segment": "$user.segment", "device": "$device_type", "day_of_week": {"$dayOfWeek": "$order_date"}}, "total_orders": {"$sum": 1}, "total_amount": {"$sum": "$total_amount"}, "promo_orders": {"$sum": {"$cond": [{"$ne": ["$promo_code", null]}, 1, 0]}}, "total_discount": {"$sum": {"$ifNull": ["$discount_amount", 0]}}, "product_categories": {"$push": "$items.category"}}}, {"$project": {"_id": 1, "avg_order_value": {"$divide": ["$total_amount", "$total_orders"]}, "promo_percentage": {"$multiply": [{"$divide": ["$promo_orders", "$total_orders"]}, 100]}, "avg_discount": {"$cond": [{"$eq": ["$promo_orders", 0]}, 0, {"$divide": ["$total_discount", "$promo_orders"]}]}, "product_categories": 1}}, {"$project": {"_id": 1, "avg_order_value": 1, "promo_percentage": 1, "avg_discount": 1, "most_common_category": {"$arrayElemAt": [{"$sortArray": {"input": {"$map": {"input": {"$setUnion": {"$reduce": {"input": "$product_categories", "initialValue": [], "in": {"$concatArrays": ["$$value", "$$this"]}}}}, "as": "category", "in": {"category": "$$category", "count": {"$size": {"$filter": {"input": {"$reduce": {"input": "$product_categories", "initialValue": [], "in": {"$concatArrays": ["$$value", "$$this"]}}}, "as": "c", "cond": {"$eq": ["$$c", "$$category"]}}}}}}}, "sortBy": {"count": -1}}}, 0]}}}])'),

    ("Find all products that have been consistently rated above average for the past 6 months, have at least 50 reviews, and have shown a month-over-month increase in sales volume, and include the top 3 customer segments purchasing these products, their average customer lifetime value, and the most effective marketing channel for each product", 
     'db.reviews.aggregate([{"$match": {"date": {"$gte": new Date(Date.now() - 180 * 24 * 60 * 60 * 1000)}}}, {"$group": {"_id": {"product_id": "$product_id", "month": {"$month": "$date"}}, "avg_rating": {"$avg": "$rating"}, "review_count": {"$sum": 1}}}, {"$group": {"_id": "$_id.product_id", "monthly_ratings": {"$push": {"month": "$_id.month", "avg_rating": "$avg_rating", "review_count": "$review_count"}}, "overall_avg": {"$avg": "$avg_rating"}, "total_reviews": {"$sum": "$review_count"}}}, {"$match": {"total_reviews": {"$gte": 50}}}, {"$project": {"monthly_ratings": 1, "overall_avg": 1, "above_average_months": {"$size": {"$filter": {"input": "$monthly_ratings", "as": "mr", "cond": {"$gt": ["$$mr.avg_rating", "$overall_avg"]}}}}}}, {"$match": {"above_average_months": 6}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$project": {"month": {"$month": "$order_date"}, "sales": {"$sum": {"$map": {"input": {"$filter": {"input": "$items", "as": "item", "cond": {"$eq": ["$$item.product_id", "$$product_id"]}}}, "as": "matched_item", "in": "$$matched_item.quantity"}}}}}, {"$group": {"_id": "$month", "total_sales": {"$sum": "$sales"}}}, {"$sort": {"_id": 1}}, {"$group": {"_id": null, "monthly_sales": {"$push": "$total_sales"}, "sales_increase": {"$reduce": {"input": {"$range": [1, {"$size": "$monthly_sales"}]}, "initialValue": true, "in": {"$and": ["$$value", {"$gt": [{"$arrayElemAt": ["$monthly_sales", "$$this"]}, {"$arrayElemAt": ["$monthly_sales", {"$subtract": ["$$this", 1]}]}]}]}}}}}], "as": "sales_data"}}, {"$match": {"sales_data.sales_increase": true}}, {"$lookup": {"from": "orders", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$items.product_id"]}}}, {"$lookup": {"from": "users", "localField": "user_id", "foreignField": "_id", "as": "user"}}, {"$unwind": "$user"}, {"$group": {"_id": "$user.segment", "order_count": {"$sum": 1}, "total_spent": {"$sum": "$total_amount"}, "user_ids": {"$addToSet": "$user_id"}}}, {"$sort": {"order_count": -1}}, {"$limit": 3}], "as": "top_segments"}}, {"$lookup": {"from": "users", "let": {"user_ids": {"$reduce": {"input": "$top_segments", "initialValue": [], "in": {"$concatArrays": ["$$value", "$$this.user_ids"]}}}}, "pipeline": [{"$match": {"$expr": {"$in": ["$_id", "$$user_ids"]}}}, {"$lookup": {"from": "orders", "localField": "_id", "foreignField": "user_id", "as": "user_orders"}}, {"$project": {"lifetime_value": {"$sum": "$user_orders.total_amount"}}}, {"$group": {"_id": null, "avg_lifetime_value": {"$avg": "$lifetime_value"}}}], "as": "customer_lifetime_value"}}, {"$lookup": {"from": "marketing_attribution", "let": {"product_id": "$_id"}, "pipeline": [{"$match": {"$expr": {"$in": ["$$product_id", "$product_ids"]}}}, {"$group": {"_id": "$channel", "conversions": {"$sum": 1}}}, {"$sort": {"conversions": -1}}, {"$limit": 1}], "as": "top_marketing_channel"}}, {"$project": {"_id": 1, "overall_avg_rating": "$overall_avg", "total_reviews": 1, "top_segments": 1, "avg_customer_lifetime_value": {"$arrayElemAt": ["$customer_lifetime_value.avg_lifetime_value", 0]}, "most_effective_channel": {"$arrayElemAt": ["$top_marketing_channel._id", 0]}}}])')
]